<!-- kv3 encoding:text:version{e21c7f3c-8a33-41c5-9977-a76d3a32aa0d} format:modeldoc28:version{fb63b6ca-f435-4aa0-a2c7-c66ddc651dca} -->
{
	rootNode = 
	{
		_class = "RootNode"
		children = 
		[
			{
				_class = "MorphRuleList"
				children = 
				[
					{
						_class = "MorphRule"
						name = "BlowNostrilL"
						target = "ScalpForwardR"
						expression = "(min(max(NostrilFlare, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "BlowNostrilR"
						target = "BlowNostrilR"
						expression = "(min(max(NostrilFlare, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "InflateCheekL"
						target = "InflateCheekL"
						expression = "(((min(max(CheekH, 0), 1)) * (1 - (min(max(JawV, 0), 1)))) * (1 - ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))))"
					},
					{
						_class = "MorphRule"
						name = "InflateCheekR"
						target = "InflateCheekR"
						expression = "(((min(max(CheekH, 0), 1)) * (1 - (min(max(JawV, 0), 1)))) * (1 - ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))))"
					},
					{
						_class = "MorphRule"
						name = "InnerSquintL"
						target = "InnerSquintL"
						expression = "InnerSquint"
					},
					{
						_class = "MorphRule"
						name = "InnerSquintR"
						target = "InnerSquintR"
						expression = "InnerSquint"
					},
					{
						_class = "MorphRule"
						name = "JutJaw"
						target = "JutJaw"
						expression = "(min(max(JawD, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "JutUpperLipL"
						target = "JutUpperLipL"
						expression = "(1 - (min(max(LipUpV + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "JutUpperLipR"
						target = "JutUpperLipR"
						expression = "(1 - (min(max(LipUpV + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "LipCnrTwstL"
						target = "LipCnrTwstL"
						expression = "(LipCnrTwst * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "LipCnrTwstR"
						target = "LipCnrTwstR"
						expression = "(LipCnrTwst * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw"
						target = "OpenJaw"
						expression = "(min(max(JawV, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "OpenLipsL"
						target = "OpenLipsL"
						expression = "((min(max(LipsV, 0), 1)) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLipsR"
						target = "OpenLipsR"
						expression = "((min(max(LipsV, 0), 1)) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLipL"
						target = "OpenLowerLipL"
						expression = "(min(max(LipLoV, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLipR"
						target = "OpenLowerLipR"
						expression = "(min(max(LipLoV, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLipL"
						target = "OpenUpperLipL"
						expression = "(min(max(LipUpV, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLipR"
						target = "OpenUpperLipR"
						expression = "(min(max(LipUpV, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "BrowOutVL"
						target = "BrowOutVL"
						expression = "BrowOutV"
					},
					{
						_class = "MorphRule"
						name = "BrowOutVR"
						target = "BrowOutVR"
						expression = "BrowOutV"
					},
					{
						_class = "MorphRule"
						name = "OuterSquintL"
						target = "OuterSquintL"
						expression = "OuterSquint"
					},
					{
						_class = "MorphRule"
						name = "OuterSquintR"
						target = "OuterSquintR"
						expression = "OuterSquint"
					},
					{
						_class = "MorphRule"
						name = "PlatysmusL"
						target = "PlatysmusL"
						expression = "Platysmus"
					},
					{
						_class = "MorphRule"
						name = "PlatysmusR"
						target = "PlatysmusR"
						expression = "Platysmus"
					},
					{
						_class = "MorphRule"
						name = "PressNoseL"
						target = "PressNoseL"
						expression = "(1 - (min(max(NoseV + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "PressNoseR"
						target = "PressNoseR"
						expression = "(1 - (min(max(NoseV + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "RaiseBrowInL"
						target = "RaiseBrowInL"
						expression = "(min(max(BrowInV, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "RaiseBrowInR"
						target = "RaiseBrowInR"
						expression = "(min(max(BrowInV, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "RaiseChinL"
						target = "RaiseChinL"
						expression = "(1 - (min(max(LipLoV + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "RaiseChinR"
						target = "RaiseChinR"
						expression = "(1 - (min(max(LipLoV + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "ScalpBackL"
						target = "ScalpBackL"
						expression = "(1 - (min(max(ScalpD + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "ScalpBackR"
						target = "ScalpBackR"
						expression = "(1 - (min(max(ScalpD + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "ScalpForwardL"
						target = "ScalpForwardL"
						expression = "(min(max(ScalpD, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "ScalpForwardR"
						target = "ScalpForwardR"
						expression = "(min(max(ScalpD, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "CheekVL"
						target = "CheekVL"
						expression = "CheekV"
					},
					{
						_class = "MorphRule"
						name = "CheekVR"
						target = "CheekVR"
						expression = "CheekV"
					},
					{
						_class = "MorphRule"
						name = "ClenchJaw"
						target = "ClenchJaw"
						expression = "(1 - (min(max(JawV + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SmileFlatL"
						target = "SmileFlatL"
						expression = "((((((min(1, (-min(0, (-11 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - -10))))) * min(max((multi_Smile - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * (1 - (min(max((multi_Smile - -1) / (0 - -1), 0), 1))))) * (Smile)) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFlatR"
						target = "SmileFlatR"
						expression = "((((((min(1, (-min(0, (-11 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - -10))))) * min(max((multi_Smile - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * (1 - (min(max((multi_Smile - -1) / (0 - -1), 0), 1))))) * (Smile)) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFullL"
						target = "SmileFullL"
						expression = "((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFullR"
						target = "SmileFullR"
						expression = "((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileSharpL"
						target = "SmileSharpL"
						expression = "((((((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * min(max((multi_Smile - 0) / (1 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (10 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 11))))) * (1 - (min(max((multi_Smile - 10) / (11 - 10), 0), 1))))) * (Smile)) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileSharpR"
						target = "SmileSharpR"
						expression = "((((((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * min(max((multi_Smile - 0) / (1 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (10 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 11))))) * (1 - (min(max((multi_Smile - 10) / (11 - 10), 0), 1))))) * (Smile)) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SneerNoseL"
						target = "SneerNoseL"
						expression = "(min(max(NoseV, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "SneerNoseR"
						target = "SneerNoseR"
						expression = "(min(max(NoseV, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "SuckJaw"
						target = "SuckJaw"
						expression = "(1 - (min(max(JawD + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SuckLipLoL"
						target = "SuckLipLoL"
						expression = "((1 - (min(max(FoldLipLo + 1, 0), 1))) * (1 - PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "SuckLipLoR"
						target = "SuckLipLoR"
						expression = "((1 - (min(max(FoldLipLo + 1, 0), 1))) * (1 - PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "SuckLipUpL"
						target = "SuckLipUpL"
						expression = "(((1 - (min(max(FoldLipUp + 1, 0), 1))) * (1 - PuckerLipUp)) * (1 - ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))))"
					},
					{
						_class = "MorphRule"
						name = "SuckLipUpR"
						target = "SuckLipUpR"
						expression = "(((1 - (min(max(FoldLipUp + 1, 0), 1))) * (1 - PuckerLipUp)) * (1 - ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidLoL"
						target = "CloseLidLoL"
						expression = "(min(1, (1 - (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (1 - (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1))) * (min(max((CloseLid - -1) / (1 - -1), 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidLoR"
						target = "CloseLidLoR"
						expression = "(min(1, (1 - (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (1 - (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1))) * (min(max((CloseLid - -1) / (1 - -1), 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SuckNostrilL"
						target = "SuckNostrilL"
						expression = "(1 - (min(max(NostrilFlare + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SuckNostrilR"
						target = "SuckNostrilR"
						expression = "(1 - (min(max(NostrilFlare + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "WrinkleNoseL"
						target = "WrinkleNoseL"
						expression = "((1 - (min(max(BrowInV + 1, 0), 1))) * (1 - BrowOutV))"
					},
					{
						_class = "MorphRule"
						name = "WrinkleNoseR"
						target = "WrinkleNoseR"
						expression = "((1 - (min(max(BrowInV + 1, 0), 1))) * (1 - BrowOutV))"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_Frown_RaiseBrowInL"
						target = "BrowOutV_Frown_RaiseBrowInL"
						expression = "((min(max(BrowInV, 0), 1)) * Frown * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_Frown_RaiseBrowInR"
						target = "BrowOutV_Frown_RaiseBrowInR"
						expression = "((min(max(BrowInV, 0), 1)) * Frown * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_RaiseBrowInL"
						target = "BrowOutV_RaiseBrowInL"
						expression = "((min(max(BrowInV, 0), 1)) * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_RaiseBrowInR"
						target = "BrowOutV_RaiseBrowInR"
						expression = "((min(max(BrowInV, 0), 1)) * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "CheekV_SmileFullL"
						target = "CheekV_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * CheekV) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "CheekV_SmileFullR"
						target = "CheekV_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * CheekV) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "CheekV_SneerNoseL"
						target = "CheekV_SneerNoseL"
						expression = "((min(max(NoseV, 0), 1)) * CheekV)"
					},
					{
						_class = "MorphRule"
						name = "CheekV_SneerNoseR"
						target = "CheekV_SneerNoseR"
						expression = "((min(max(NoseV, 0), 1)) * CheekV)"
					},
					{
						_class = "MorphRule"
						name = "CompressLips_RaiseChinL"
						target = "CompressLips_RaiseChinL"
						expression = "((((1 - (min(max(LipLoV + 1, 0), 1))) * (1 - (min(max(LipsV + 1, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CompressLips_RaiseChinR"
						target = "CompressLips_RaiseChinR"
						expression = "((((1 - (min(max(LipLoV + 1, 0), 1))) * (1 - (min(max(LipsV + 1, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUpL"
						target = "CloseLidUpL"
						expression = "(min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUpR"
						target = "CloseLidUpR"
						expression = "(min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_OpenLipsL"
						target = "Dimple_OpenLipsL"
						expression = "((((min(max(LipsV, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_OpenLipsR"
						target = "Dimple_OpenLipsR"
						expression = "((((min(max(LipsV, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "Frown_WrinkleNoseL"
						target = "Frown_WrinkleNoseL"
						expression = "(((1 - (min(max(BrowInV + 1, 0), 1))) * Frown) * (1 - BrowOutV))"
					},
					{
						_class = "MorphRule"
						name = "Frown_WrinkleNoseR"
						target = "Frown_WrinkleNoseR"
						expression = "(((1 - (min(max(BrowInV + 1, 0), 1))) * Frown) * (1 - BrowOutV))"
					},
					{
						_class = "MorphRule"
						name = "InnerSquint_OuterSquintL"
						target = "InnerSquint_OuterSquintL"
						expression = "(OuterSquint * InnerSquint)"
					},
					{
						_class = "MorphRule"
						name = "InnerSquint_OuterSquintR"
						target = "InnerSquint_OuterSquintR"
						expression = "(OuterSquint * InnerSquint)"
					},
					{
						_class = "MorphRule"
						name = "JutUpperLip_RaiseChinL"
						target = "JutUpperLip_RaiseChinL"
						expression = "((1 - (min(max(LipLoV + 1, 0), 1))) * (1 - (min(max(LipUpV + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "JutUpperLip_RaiseChinR"
						target = "JutUpperLip_RaiseChinR"
						expression = "((1 - (min(max(LipLoV + 1, 0), 1))) * (1 - (min(max(LipUpV + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "LipCnrTwst_OpenUpperLip_SuckLipLoL"
						target = "LipCnrTwst_OpenUpperLip_SuckLipLoL"
						expression = "((((1 - (min(max(FoldLipLo + 1, 0), 1))) * (min(max(LipUpV, 0), 1)) * LipCnrTwst) * (1 - Platysmus)) * (1 - PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "LipCnrTwst_OpenUpperLip_SuckLipLoR"
						target = "LipCnrTwst_OpenUpperLip_SuckLipLoR"
						expression = "((((1 - (min(max(FoldLipLo + 1, 0), 1))) * (min(max(LipUpV, 0), 1)) * LipCnrTwst) * (1 - Platysmus)) * (1 - PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLipsL"
						target = "OpenJaw_OpenLipsL"
						expression = "(((min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLipsR"
						target = "OpenJaw_OpenLipsR"
						expression = "(((min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_Platysmus_SmileFullL"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_Platysmus_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_Platysmus_SmileFullR"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_Platysmus_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLipL"
						target = "OpenJaw_OpenLowerLip_OpenUpperLipL"
						expression = "((min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLipR"
						target = "OpenJaw_OpenLowerLip_OpenUpperLipR"
						expression = "((min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "CompressLipsL"
						target = "CompressLipsL"
						expression = "(((1 - (min(max(LipsV + 1, 0), 1))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CompressLipsR"
						target = "CompressLipsR"
						expression = "(((1 - (min(max(LipsV + 1, 0), 1))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFullL"
						target = "OpenLips_SmileFullL"
						expression = "((((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFullR"
						target = "OpenLips_SmileFullR"
						expression = "((((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_Platysmus_SmileFullL"
						target = "OpenLowerLip_OpenUpperLip_Platysmus_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_Platysmus_SmileFullR"
						target = "OpenLowerLip_OpenUpperLip_Platysmus_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLipL"
						target = "OpenLowerLip_OpenUpperLipL"
						expression = "((min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLipR"
						target = "OpenLowerLip_OpenUpperLipR"
						expression = "((min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SuckLipLoL"
						target = "OpenLowerLip_SuckLipLoL"
						expression = "(((1 - (min(max(FoldLipLo + 1, 0), 1))) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SuckLipLoR"
						target = "OpenLowerLip_SuckLipLoR"
						expression = "(((1 - (min(max(FoldLipLo + 1, 0), 1))) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SuckLipUpL"
						target = "OpenUpperLip_SuckLipUpL"
						expression = "((((1 - (min(max(FoldLipUp + 1, 0), 1))) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipUp)) * (1 - ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SuckLipUpR"
						target = "OpenUpperLip_SuckLipUpR"
						expression = "((((1 - (min(max(FoldLipUp + 1, 0), 1))) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipUp)) * (1 - ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))))"
					},
					{
						_class = "MorphRule"
						name = "DeflateCheekL"
						target = "DeflateCheekL"
						expression = "(1 - (min(max(CheekH + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "DeflateCheekR"
						target = "DeflateCheekR"
						expression = "(1 - (min(max(CheekH + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "DimpleL"
						target = "DimpleL"
						expression = "(Dimple * (1 - LipCnrTwst))"
					},
					{
						_class = "MorphRule"
						name = "DimpleR"
						target = "DimpleR"
						expression = "(Dimple * (1 - LipCnrTwst))"
					},
					{
						_class = "MorphRule"
						name = "FrownL"
						target = "FrownL"
						expression = "Frown"
					},
					{
						_class = "MorphRule"
						name = "FrownR"
						target = "FrownR"
						expression = "Frown"
					},
					{
						_class = "MorphRule"
						name = "CheekV_OuterSquintL"
						target = "CheekV_OuterSquintL"
						expression = "(OuterSquint * CheekV)"
					},
					{
						_class = "MorphRule"
						name = "CheekV_OuterSquintR"
						target = "CheekV_OuterSquintR"
						expression = "(OuterSquint * CheekV)"
					},
					{
						_class = "MorphRule"
						name = "CheekV_InnerSquintL"
						target = "CheekV_InnerSquintL"
						expression = "(InnerSquint * CheekV)"
					},
					{
						_class = "MorphRule"
						name = "CheekV_InnerSquintR"
						target = "CheekV_InnerSquintR"
						expression = "(InnerSquint * CheekV)"
					},
					{
						_class = "MorphRule"
						name = "CheekV_InnerSquint_OuterSquintL"
						target = "CheekV_InnerSquint_OuterSquintL"
						expression = "(OuterSquint * InnerSquint * CheekV)"
					},
					{
						_class = "MorphRule"
						name = "CheekV_InnerSquint_OuterSquintR"
						target = "CheekV_InnerSquint_OuterSquintR"
						expression = "(OuterSquint * InnerSquint * CheekV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_InnerSquintL"
						target = "BrowOutV_InnerSquintL"
						expression = "(InnerSquint * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_InnerSquintR"
						target = "BrowOutV_InnerSquintR"
						expression = "(InnerSquint * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_OuterSquintL"
						target = "BrowOutV_OuterSquintL"
						expression = "(OuterSquint * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_OuterSquintR"
						target = "BrowOutV_OuterSquintR"
						expression = "(OuterSquint * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_InnerSquint_OuterSquintL"
						target = "BrowOutV_InnerSquint_OuterSquintL"
						expression = "(OuterSquint * InnerSquint * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_InnerSquint_OuterSquintR"
						target = "BrowOutV_InnerSquint_OuterSquintR"
						expression = "(OuterSquint * InnerSquint * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "RaiseBrowIn_InnerSquintL"
						target = "RaiseBrowIn_InnerSquintL"
						expression = "(InnerSquint * (min(max(BrowInV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "RaiseBrowIn_InnerSquintR"
						target = "RaiseBrowIn_InnerSquintR"
						expression = "(InnerSquint * (min(max(BrowInV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidLo_CheekVL"
						target = "CloseLidLo_CheekVL"
						expression = "(CheekV * (min(1, (1 - (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (1 - (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1))) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidLo_CheekVR"
						target = "CloseLidLo_CheekVR"
						expression = "(CheekV * (min(1, (1 - (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (1 - (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1))) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_RaiseBrowInL"
						target = "CloseLidUp_RaiseBrowInL"
						expression = "((min(max(BrowInV, 0), 1)) * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_RaiseBrowInR"
						target = "CloseLidUp_RaiseBrowInR"
						expression = "((min(max(BrowInV, 0), 1)) * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_OuterSquintL"
						target = "CloseLidUp_OuterSquintL"
						expression = "(OuterSquint * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_OuterSquintR"
						target = "CloseLidUp_OuterSquintR"
						expression = "(OuterSquint * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_InnerSquintL"
						target = "CloseLidUp_InnerSquintL"
						expression = "(InnerSquint * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_InnerSquintR"
						target = "CloseLidUp_InnerSquintR"
						expression = "(InnerSquint * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_InnerSquint_OuterSquintL"
						target = "CloseLidUp_InnerSquint_OuterSquintL"
						expression = "(OuterSquint * InnerSquint * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_InnerSquint_OuterSquintR"
						target = "CloseLidUp_InnerSquint_OuterSquintR"
						expression = "(OuterSquint * InnerSquint * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "InnerSquint_OuterSquint_RaiseBrowInL"
						target = "InnerSquint_OuterSquint_RaiseBrowInL"
						expression = "((min(max(BrowInV, 0), 1)) * OuterSquint * InnerSquint)"
					},
					{
						_class = "MorphRule"
						name = "InnerSquint_OuterSquint_RaiseBrowInR"
						target = "InnerSquint_OuterSquint_RaiseBrowInR"
						expression = "((min(max(BrowInV, 0), 1)) * OuterSquint * InnerSquint)"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_InnerSquint_OuterSquint_RaiseBrowInL"
						target = "CloseLidUp_InnerSquint_OuterSquint_RaiseBrowInL"
						expression = "((min(max(BrowInV, 0), 1)) * OuterSquint * InnerSquint * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CloseLidUp_InnerSquint_OuterSquint_RaiseBrowInR"
						target = "CloseLidUp_InnerSquint_OuterSquint_RaiseBrowInR"
						expression = "((min(max(BrowInV, 0), 1)) * OuterSquint * InnerSquint * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_CloseLidUpL"
						target = "BrowOutV_CloseLidUpL"
						expression = "((min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))) * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_CloseLidUpR"
						target = "BrowOutV_CloseLidUpR"
						expression = "((min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))) * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_FrownL"
						target = "BrowOutV_FrownL"
						expression = "(Frown * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_FrownR"
						target = "BrowOutV_FrownR"
						expression = "(Frown * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_CloseLidUp_RaiseBrowInL"
						target = "BrowOutV_CloseLidUp_RaiseBrowInL"
						expression = "((min(max(BrowInV, 0), 1)) * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))) * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_CloseLidUp_RaiseBrowInR"
						target = "BrowOutV_CloseLidUp_RaiseBrowInR"
						expression = "((min(max(BrowInV, 0), 1)) * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))) * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_CloseLidUp_FrownL"
						target = "BrowOutV_CloseLidUp_FrownL"
						expression = "(Frown * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))) * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "BrowOutV_CloseLidUp_FrownR"
						target = "BrowOutV_CloseLidUp_FrownR"
						expression = "(Frown * (min(1, (1 + (-1 + 2 * (min(max((eyes_updown - -45) / (45 - -45), 0), 1))))) * (min(max((multi_CloseLid - -1) / (1 - -1), 0), 1)) * (min(max((CloseLid - -1) / (1 - -1), 0), 1))) * BrowOutV)"
					},
					{
						_class = "MorphRule"
						name = "InnerSquint_SneerNoseL"
						target = "InnerSquint_SneerNoseL"
						expression = "((min(max(NoseV, 0), 1)) * InnerSquint)"
					},
					{
						_class = "MorphRule"
						name = "InnerSquint_SneerNoseR"
						target = "InnerSquint_SneerNoseR"
						expression = "((min(max(NoseV, 0), 1)) * InnerSquint)"
					},
					{
						_class = "MorphRule"
						name = "InnerSquint_OuterSquint_SneerNoseL"
						target = "InnerSquint_OuterSquint_SneerNoseL"
						expression = "((min(max(NoseV, 0), 1)) * OuterSquint * InnerSquint)"
					},
					{
						_class = "MorphRule"
						name = "InnerSquint_OuterSquint_SneerNoseR"
						target = "InnerSquint_OuterSquint_SneerNoseR"
						expression = "((min(max(NoseV, 0), 1)) * OuterSquint * InnerSquint)"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUpL"
						target = "PuckerLipUpL"
						expression = "(PuckerLipUp * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUpR"
						target = "PuckerLipUpR"
						expression = "(PuckerLipUp * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLoL"
						target = "PuckerLipLoL"
						expression = "(PuckerLipLo * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLoR"
						target = "PuckerLipLoR"
						expression = "(PuckerLipLo * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUpL"
						target = "PuckerLipLo_PuckerLipUpL"
						expression = "(((PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUpR"
						target = "PuckerLipLo_PuckerLipUpR"
						expression = "(((PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUpL"
						target = "OpenJaw_PuckerLipUpL"
						expression = "((PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUpR"
						target = "OpenJaw_PuckerLipUpR"
						expression = "((PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLoL"
						target = "OpenJaw_PuckerLipLoL"
						expression = "((PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLoR"
						target = "OpenJaw_PuckerLipLoR"
						expression = "((PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUpL"
						target = "OpenJaw_PuckerLipLo_PuckerLipUpL"
						expression = "(((PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUpR"
						target = "OpenJaw_PuckerLipLo_PuckerLipUpR"
						expression = "(((PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipUpL"
						target = "OpenLips_PuckerLipUpL"
						expression = "(((PuckerLipUp * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipUpR"
						target = "OpenLips_PuckerLipUpR"
						expression = "(((PuckerLipUp * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLoL"
						target = "OpenLips_PuckerLipLoL"
						expression = "(((PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLoR"
						target = "OpenLips_PuckerLipLoR"
						expression = "(((PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUpL"
						target = "OpenLips_PuckerLipLo_PuckerLipUpL"
						expression = "((((PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUpR"
						target = "OpenLips_PuckerLipLo_PuckerLipUpR"
						expression = "((((PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUpL"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUpL"
						expression = "((((PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUpR"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUpR"
						expression = "((((PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLoL"
						target = "OpenJaw_OpenLips_PuckerLipLoL"
						expression = "(((PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLoR"
						target = "OpenJaw_OpenLips_PuckerLipLoR"
						expression = "(((PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUpL"
						target = "OpenJaw_OpenLips_PuckerLipUpL"
						expression = "(((PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUpR"
						target = "OpenJaw_OpenLips_PuckerLipUpR"
						expression = "(((PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_PuckerLipLoL"
						target = "Dimple_PuckerLipLoL"
						expression = "(((PuckerLipLo * Dimple) * (1 - LipCnrTwst)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_PuckerLipLoR"
						target = "Dimple_PuckerLipLoR"
						expression = "(((PuckerLipLo * Dimple) * (1 - LipCnrTwst)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_PuckerLipUpL"
						target = "Dimple_PuckerLipUpL"
						expression = "(((PuckerLipUp * Dimple) * (1 - LipCnrTwst)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_PuckerLipUpR"
						target = "Dimple_PuckerLipUpR"
						expression = "(((PuckerLipUp * Dimple) * (1 - LipCnrTwst)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_PuckerLipLo_PuckerLipUpL"
						target = "Dimple_PuckerLipLo_PuckerLipUpL"
						expression = "((((PuckerLipUp * PuckerLipLo * Dimple) * (1 - LipCnrTwst)) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_PuckerLipLo_PuckerLipUpR"
						target = "Dimple_PuckerLipLo_PuckerLipUpR"
						expression = "((((PuckerLipUp * PuckerLipLo * Dimple) * (1 - LipCnrTwst)) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_OpenLips_PuckerLipLo_PuckerLipUpL"
						target = "Dimple_OpenLips_PuckerLipLo_PuckerLipUpL"
						expression = "(((((PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_OpenLips_PuckerLipLo_PuckerLipUpR"
						target = "Dimple_OpenLips_PuckerLipLo_PuckerLipUpR"
						expression = "(((((PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "FunnelLipUpL"
						target = "FunnelLipUpL"
						expression = "((((min(max(FoldLipUp, 0), 1)) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "FunnelLipUpR"
						target = "FunnelLipUpR"
						expression = "((((min(max(FoldLipUp, 0), 1)) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "FunnelLipLoL"
						target = "FunnelLipLoL"
						expression = "((((min(max(FoldLipLo, 0), 1)) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "FunnelLipLoR"
						target = "FunnelLipLoR"
						expression = "((((min(max(FoldLipLo, 0), 1)) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "FunnelLipLo_FunnelLipUpL"
						target = "FunnelLipLo_FunnelLipUpL"
						expression = "((((((((min(max(FoldLipUp, 0), 1)) * (min(max(FoldLipLo, 0), 1))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "FunnelLipLo_FunnelLipUpR"
						target = "FunnelLipLo_FunnelLipUpR"
						expression = "((((((((min(max(FoldLipUp, 0), 1)) * (min(max(FoldLipLo, 0), 1))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_FunnelLipLoL"
						target = "Dimple_FunnelLipLoL"
						expression = "((((((min(max(FoldLipLo, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_FunnelLipLoR"
						target = "Dimple_FunnelLipLoR"
						expression = "((((((min(max(FoldLipLo, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_FunnelLipUpL"
						target = "Dimple_FunnelLipUpL"
						expression = "((((((min(max(FoldLipUp, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_FunnelLipUpR"
						target = "Dimple_FunnelLipUpR"
						expression = "((((((min(max(FoldLipUp, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_FunnelLipLo_FunnelLipUpL"
						target = "Dimple_FunnelLipLo_FunnelLipUpL"
						expression = "(((((((((min(max(FoldLipUp, 0), 1)) * (min(max(FoldLipLo, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "Dimple_FunnelLipLo_FunnelLipUpR"
						target = "Dimple_FunnelLipLo_FunnelLipUpR"
						expression = "(((((((((min(max(FoldLipUp, 0), 1)) * (min(max(FoldLipLo, 0), 1)) * Dimple) * (1 - LipCnrTwst)) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_FunnelLipUpL"
						target = "OpenJaw_FunnelLipUpL"
						expression = "(((((min(max(FoldLipUp, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_FunnelLipUpR"
						target = "OpenJaw_FunnelLipUpR"
						expression = "(((((min(max(FoldLipUp, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_FunnelLipLoL"
						target = "OpenJaw_FunnelLipLoL"
						expression = "(((((min(max(FoldLipLo, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_FunnelLipLoR"
						target = "OpenJaw_FunnelLipLoR"
						expression = "(((((min(max(FoldLipLo, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_FunnelLipLo_FunnelLipUpL"
						target = "OpenJaw_FunnelLipLo_FunnelLipUpL"
						expression = "((((((((min(max(FoldLipUp, 0), 1)) * (min(max(FoldLipLo, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_FunnelLipLo_FunnelLipUpR"
						target = "OpenJaw_FunnelLipLo_FunnelLipUpR"
						expression = "((((((((min(max(FoldLipUp, 0), 1)) * (min(max(FoldLipLo, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipLo)) * (1 - (min(max(JawV, 0), 1)) * PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "PuffLipUpL"
						target = "PuffLipUpL"
						expression = "(((((PuffLipUp * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "PuffLipUpR"
						target = "PuffLipUpR"
						expression = "(((((PuffLipUp * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "PuffLipLoL"
						target = "PuffLipLoL"
						expression = "(((((PuffLipLo * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "PuffLipLoR"
						target = "PuffLipLoR"
						expression = "(((((PuffLipLo * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "PuffLipUp_PuffLipLoL"
						target = "PuffLipUp_PuffLipLoL"
						expression = "(((((((((((PuffLipLo * PuffLipUp) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "PuffLipUp_PuffLipLoR"
						target = "PuffLipUp_PuffLipLoR"
						expression = "(((((((((((PuffLipLo * PuffLipUp) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuffLiploL"
						target = "PuckerLipLo_PuffLiploL"
						expression = "(((((((PuffLipLo * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuffLiploR"
						target = "PuckerLipLo_PuffLiploR"
						expression = "(((((((PuffLipLo * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuffLipUpL"
						target = "PuckerLipLo_PuffLipUpL"
						expression = "(((((((PuffLipUp * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuffLipUpR"
						target = "PuckerLipLo_PuffLipUpR"
						expression = "(((((((PuffLipUp * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_PuffLipLoL"
						target = "PuckerLipUp_PuffLipLoL"
						expression = "(((((((PuffLipLo * PuckerLipUp) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_PuffLipLoR"
						target = "PuckerLipUp_PuffLipLoR"
						expression = "(((((((PuffLipLo * PuckerLipUp) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_PuffLipUpL"
						target = "PuckerLipLo_PuckerLipUp_PuffLipUpL"
						expression = "((((((((PuffLipUp * PuckerLipUp * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_PuffLipUpR"
						target = "PuckerLipLo_PuckerLipUp_PuffLipUpR"
						expression = "((((((((PuffLipUp * PuckerLipUp * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_PuffLipUpL"
						target = "PuckerLipUp_PuffLipUpL"
						expression = "(((((((PuffLipUp * PuckerLipUp) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_PuffLipUpR"
						target = "PuckerLipUp_PuffLipUpR"
						expression = "(((((((PuffLipUp * PuckerLipUp) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_PuffLipLoL"
						target = "PuckerLipLo_PuckerLipUp_PuffLipLoL"
						expression = "((((((((PuffLipLo * PuckerLipUp * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_PuffLipLoR"
						target = "PuckerLipLo_PuckerLipUp_PuffLipLoR"
						expression = "((((((((PuffLipLo * PuckerLipUp * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_PuffLipUp_PuffLipLoL"
						target = "PuckerLipUp_PuffLipUp_PuffLipLoL"
						expression = "((((((((((((PuffLipLo * PuffLipUp * PuckerLipUp) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_PuffLipUp_PuffLipLoR"
						target = "PuckerLipUp_PuffLipUp_PuffLipLoR"
						expression = "((((((((((((PuffLipLo * PuffLipUp * PuckerLipUp) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuffLipLo_PuffLipUpL"
						target = "PuckerLipLo_PuffLipLo_PuffLipUpL"
						expression = "((((((((((((PuffLipUp * PuffLipLo * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuffLipLo_PuffLipUpR"
						target = "PuckerLipLo_PuffLipLo_PuffLipUpR"
						expression = "((((((((((((PuffLipUp * PuffLipLo * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_PuffLipLo_PuffLipUpL"
						target = "PuckerLipLo_PuckerLipUp_PuffLipLo_PuffLipUpL"
						expression = "(((((((((((((PuffLipUp * PuffLipLo * PuckerLipUp * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_PuffLipLo_PuffLipUpR"
						target = "PuckerLipLo_PuckerLipUp_PuffLipLo_PuffLipUpR"
						expression = "(((((((((((((PuffLipUp * PuffLipLo * PuckerLipUp * PuckerLipLo) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipLo, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(FoldLipUp, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipsV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_RaiseChin_SneerNoseL"
						target = "PuckerLipUp_RaiseChin_SneerNoseL"
						expression = "(((min(max(NoseV, 0), 1)) * (1 - (min(max(LipLoV + 1, 0), 1))) * PuckerLipUp) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_RaiseChin_SneerNoseR"
						target = "PuckerLipUp_RaiseChin_SneerNoseR"
						expression = "(((min(max(NoseV, 0), 1)) * (1 - (min(max(LipLoV + 1, 0), 1))) * PuckerLipUp) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_RaiseChinL"
						target = "PuckerLipUp_RaiseChinL"
						expression = "(((1 - (min(max(LipLoV + 1, 0), 1))) * PuckerLipUp) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipUp_RaiseChinR"
						target = "PuckerLipUp_RaiseChinR"
						expression = "(((1 - (min(max(LipLoV + 1, 0), 1))) * PuckerLipUp) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLipL"
						target = "OpenLips_OpenUpperLipL"
						expression = "(((min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLipR"
						target = "OpenLips_OpenUpperLipR"
						expression = "(((min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLipL"
						target = "OpenLips_OpenLowerLipL"
						expression = "(((min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLipR"
						target = "OpenLips_OpenLowerLipR"
						expression = "(((min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLipL"
						target = "OpenJaw_OpenLips_OpenUpperLipL"
						expression = "(((min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLipR"
						target = "OpenJaw_OpenLips_OpenUpperLipR"
						expression = "(((min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLipL"
						target = "OpenJaw_OpenLips_OpenLowerLipL"
						expression = "(((min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLipR"
						target = "OpenJaw_OpenLips_OpenLowerLipR"
						expression = "(((min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLipL"
						target = "OpenJaw_OpenUpperLipL"
						expression = "((min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLipR"
						target = "OpenJaw_OpenUpperLipR"
						expression = "((min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLipL"
						target = "OpenJaw_OpenLowerLipL"
						expression = "((min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLipR"
						target = "OpenJaw_OpenLowerLipR"
						expression = "((min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_PlatysmusL"
						target = "OpenUpperLip_PlatysmusL"
						expression = "(Platysmus * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_PlatysmusR"
						target = "OpenUpperLip_PlatysmusR"
						expression = "(Platysmus * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_PlatysmusL"
						target = "OpenLowerLip_PlatysmusL"
						expression = "(Platysmus * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_PlatysmusR"
						target = "OpenLowerLip_PlatysmusR"
						expression = "(Platysmus * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_PlatysmusL"
						target = "OpenLowerLip_OpenUpperLip_PlatysmusL"
						expression = "(Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_PlatysmusR"
						target = "OpenLowerLip_OpenUpperLip_PlatysmusR"
						expression = "(Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFullL"
						target = "OpenUpperLip_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFullR"
						target = "OpenUpperLip_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFullL"
						target = "OpenLowerLip_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFullR"
						target = "OpenLowerLip_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFullL"
						target = "OpenLowerLip_OpenUpperLip_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFullR"
						target = "OpenLowerLip_OpenUpperLip_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFullL"
						target = "OpenLips_OpenUpperLip_SmileFullL"
						expression = "((((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFullR"
						target = "OpenLips_OpenUpperLip_SmileFullR"
						expression = "((((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFullL"
						target = "OpenLips_OpenLowerLip_SmileFullL"
						expression = "((((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFullR"
						target = "OpenLips_OpenLowerLip_SmileFullR"
						expression = "((((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_PlatysmusL"
						target = "SmileFull_PlatysmusL"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_PlatysmusR"
						target = "SmileFull_PlatysmusR"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "Platysmus_RaiseChinL"
						target = "Platysmus_RaiseChinL"
						expression = "((1 - (min(max(LipLoV + 1, 0), 1))) * Platysmus)"
					},
					{
						_class = "MorphRule"
						name = "Platysmus_RaiseChinR"
						target = "Platysmus_RaiseChinR"
						expression = "((1 - (min(max(LipLoV + 1, 0), 1))) * Platysmus)"
					},
					{
						_class = "MorphRule"
						name = "JutUpperLip_Platysmus_RaiseChinL"
						target = "JutUpperLip_Platysmus_RaiseChinL"
						expression = "((1 - (min(max(LipLoV + 1, 0), 1))) * Platysmus * (1 - (min(max(LipUpV + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "JutUpperLip_Platysmus_RaiseChinR"
						target = "JutUpperLip_Platysmus_RaiseChinR"
						expression = "((1 - (min(max(LipLoV + 1, 0), 1))) * Platysmus * (1 - (min(max(LipUpV + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_PlatysmusL"
						target = "OpenUpperLip_SmileFull_PlatysmusL"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_PlatysmusR"
						target = "OpenUpperLip_SmileFull_PlatysmusR"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_PlatysmusL"
						target = "OpenLowerLip_SmileFull_PlatysmusL"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_PlatysmusR"
						target = "OpenLowerLip_SmileFull_PlatysmusR"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PlatysmusL"
						target = "OpenJaw_PlatysmusL"
						expression = "(Platysmus * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PlatysmusR"
						target = "OpenJaw_PlatysmusR"
						expression = "(Platysmus * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_PlatysmusL"
						target = "OpenJaw_OpenLowerLip_PlatysmusL"
						expression = "(Platysmus * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_PlatysmusR"
						target = "OpenJaw_OpenLowerLip_PlatysmusR"
						expression = "(Platysmus * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_SmileFullL"
						target = "OpenJaw_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_SmileFullR"
						target = "OpenJaw_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_Platysmus_SmileFullL"
						target = "OpenJaw_Platysmus_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * Platysmus * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_Platysmus_SmileFullR"
						target = "OpenJaw_Platysmus_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * Platysmus * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_SmileFullL"
						target = "OpenJaw_OpenLowerLip_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_SmileFullR"
						target = "OpenJaw_OpenLowerLip_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_SmileFullL"
						target = "OpenJaw_OpenUpperLip_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_SmileFullR"
						target = "OpenJaw_OpenUpperLip_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_SmileFullL"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_SmileFullL"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_SmileFullR"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_SmileFullR"
						expression = "(((((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_SmileFull_PlatysmusL"
						target = "OpenJaw_OpenLowerLip_SmileFull_PlatysmusL"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_SmileFull_PlatysmusR"
						target = "OpenJaw_OpenLowerLip_SmileFull_PlatysmusR"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_PlatysmusL"
						target = "OpenJaw_OpenUpperLip_PlatysmusL"
						expression = "(Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_PlatysmusR"
						target = "OpenJaw_OpenUpperLip_PlatysmusR"
						expression = "(Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_PlatysmusL"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_PlatysmusL"
						expression = "(Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_PlatysmusR"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_PlatysmusR"
						expression = "(Platysmus * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_SmileFull_PlatysmusL"
						target = "OpenJaw_OpenUpperLip_SmileFull_PlatysmusL"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_SmileFull_PlatysmusR"
						target = "OpenJaw_OpenUpperLip_SmileFull_PlatysmusR"
						expression = "(((Platysmus * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SlideJawL"
						target = "SlideJawL"
						expression = "(min(max(JawH, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "SlideJawR"
						target = "SlideJawR"
						expression = "(1 - (min(max(JawH + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "CheekV_PuckerLipUp_RaiseChinL"
						target = "CheekV_PuckerLipUp_RaiseChinL"
						expression = "(((1 - (min(max(LipLoV + 1, 0), 1))) * PuckerLipUp * CheekV) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "CheekV_PuckerLipUp_RaiseChinR"
						target = "CheekV_PuckerLipUp_RaiseChinR"
						expression = "(((1 - (min(max(LipLoV + 1, 0), 1))) * PuckerLipUp * CheekV) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "CompressLips_JutUpperLip_RaiseChinL"
						target = "CompressLips_JutUpperLip_RaiseChinL"
						expression = "((((1 - (min(max(LipLoV + 1, 0), 1))) * (1 - (min(max(LipUpV + 1, 0), 1))) * (1 - (min(max(LipsV + 1, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "CompressLips_JutUpperLip_RaiseChinR"
						target = "CompressLips_JutUpperLip_RaiseChinR"
						expression = "((((1 - (min(max(LipLoV + 1, 0), 1))) * (1 - (min(max(LipUpV + 1, 0), 1))) * (1 - (min(max(LipsV + 1, 0), 1)))) * (1 - (min(max(LipLoV, 0), 1)))) * (1 - (min(max(LipUpV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "TongueBack"
						target = "TongueBack"
						expression = "(1 - (min(max(TongueD + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "TongueCurlDown"
						target = "TongueCurlDown"
						expression = "(min(max(TongueCurl, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "TongueCurlUp"
						target = "TongueCurlUp"
						expression = "(1 - (min(max(TongueCurl + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "TongueFunnel"
						target = "TongueFunnel"
						expression = "TongueFunnel"
					},
					{
						_class = "MorphRule"
						name = "TongueLeft"
						target = "TongueLeft"
						expression = "(1 - (min(max(TongueH + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "TongueNarrow"
						target = "TongueNarrow"
						expression = "(1 - (min(max(TongueWidth + 1, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "TongueOut"
						target = "TongueOut"
						expression = "(min(max(TongueD, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "TongueRight"
						target = "TongueRight"
						expression = "(min(max(TongueH, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "TongueV"
						target = "TongueV"
						expression = "TongueV"
					},
					{
						_class = "MorphRule"
						name = "TongueWide"
						target = "TongueWide"
						expression = "(min(max(TongueWidth, 0), 1))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip00L"
						target = "ZipLip00L"
						expression = "((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip00R"
						target = "ZipLip00R"
						expression = "((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip25L"
						target = "ZipLip25L"
						expression = "((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip25R"
						target = "ZipLip25R"
						expression = "((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip50L"
						target = "ZipLip50L"
						expression = "((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip50R"
						target = "ZipLip50R"
						expression = "((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip75L"
						target = "ZipLip75L"
						expression = "((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip75R"
						target = "ZipLip75R"
						expression = "((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip100L"
						target = "ZipLip100L"
						expression = "((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "ZipLip100R"
						target = "ZipLip100R"
						expression = "((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip00L"
						target = "OpenLips_ZipLip00L"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip00R"
						target = "OpenLips_ZipLip00R"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip100L"
						target = "OpenLips_ZipLip100L"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip100R"
						target = "OpenLips_ZipLip100R"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip75L"
						target = "OpenLips_ZipLip75L"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip75R"
						target = "OpenLips_ZipLip75R"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip50L"
						target = "OpenLips_ZipLip50L"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip50R"
						target = "OpenLips_ZipLip50R"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip25L"
						target = "OpenLips_ZipLip25L"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_ZipLip25R"
						target = "OpenLips_ZipLip25R"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip00L"
						target = "OpenUpperLip_ZipLip00L"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip00R"
						target = "OpenUpperLip_ZipLip00R"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip100L"
						target = "OpenUpperLip_ZipLip100L"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip100R"
						target = "OpenUpperLip_ZipLip100R"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip75L"
						target = "OpenUpperLip_ZipLip75L"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip75R"
						target = "OpenUpperLip_ZipLip75R"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip50L"
						target = "OpenUpperLip_ZipLip50L"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip50R"
						target = "OpenUpperLip_ZipLip50R"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip25L"
						target = "OpenUpperLip_ZipLip25L"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_ZipLip25R"
						target = "OpenUpperLip_ZipLip25R"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip00L"
						target = "OpenLowerLip_ZipLip00L"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip00R"
						target = "OpenLowerLip_ZipLip00R"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip100L"
						target = "OpenLowerLip_ZipLip100L"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip100R"
						target = "OpenLowerLip_ZipLip100R"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip75L"
						target = "OpenLowerLip_ZipLip75L"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip75R"
						target = "OpenLowerLip_ZipLip75R"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip50L"
						target = "OpenLowerLip_ZipLip50L"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip50R"
						target = "OpenLowerLip_ZipLip50R"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip25L"
						target = "OpenLowerLip_ZipLip25L"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_ZipLip25R"
						target = "OpenLowerLip_ZipLip25R"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip00L"
						target = "OpenLowerLip_OpenUpperLip_ZipLip00L"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip00R"
						target = "OpenLowerLip_OpenUpperLip_ZipLip00R"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip100L"
						target = "OpenLowerLip_OpenUpperLip_ZipLip100L"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip100R"
						target = "OpenLowerLip_OpenUpperLip_ZipLip100R"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip75L"
						target = "OpenLowerLip_OpenUpperLip_ZipLip75L"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip75R"
						target = "OpenLowerLip_OpenUpperLip_ZipLip75R"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip50L"
						target = "OpenLowerLip_OpenUpperLip_ZipLip50L"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip50R"
						target = "OpenLowerLip_OpenUpperLip_ZipLip50R"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip25L"
						target = "OpenLowerLip_OpenUpperLip_ZipLip25L"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_ZipLip25R"
						target = "OpenLowerLip_OpenUpperLip_ZipLip25R"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip00L"
						target = "OpenLips_OpenLowerLip_ZipLip00L"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip00R"
						target = "OpenLips_OpenLowerLip_ZipLip00R"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip100L"
						target = "OpenLips_OpenLowerLip_ZipLip100L"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip100R"
						target = "OpenLips_OpenLowerLip_ZipLip100R"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip75L"
						target = "OpenLips_OpenLowerLip_ZipLip75L"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip75R"
						target = "OpenLips_OpenLowerLip_ZipLip75R"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip50L"
						target = "OpenLips_OpenLowerLip_ZipLip50L"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip50R"
						target = "OpenLips_OpenLowerLip_ZipLip50R"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip25L"
						target = "OpenLips_OpenLowerLip_ZipLip25L"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_ZipLip25R"
						target = "OpenLips_OpenLowerLip_ZipLip25R"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip00L"
						target = "SneerNose_ZipLip00L"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip00R"
						target = "SneerNose_ZipLip00R"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip100L"
						target = "SneerNose_ZipLip100L"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip100R"
						target = "SneerNose_ZipLip100R"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip75L"
						target = "SneerNose_ZipLip75L"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip75R"
						target = "SneerNose_ZipLip75R"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip50L"
						target = "SneerNose_ZipLip50L"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip50R"
						target = "SneerNose_ZipLip50R"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip25L"
						target = "SneerNose_ZipLip25L"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "SneerNose_ZipLip25R"
						target = "SneerNose_ZipLip25R"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(NoseV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip00L"
						target = "OpenLips_OpenUpperLip_ZipLip00L"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip00R"
						target = "OpenLips_OpenUpperLip_ZipLip00R"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip100L"
						target = "OpenLips_OpenUpperLip_ZipLip100L"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip100R"
						target = "OpenLips_OpenUpperLip_ZipLip100R"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip75L"
						target = "OpenLips_OpenUpperLip_ZipLip75L"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip75R"
						target = "OpenLips_OpenUpperLip_ZipLip75R"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip50L"
						target = "OpenLips_OpenUpperLip_ZipLip50L"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip50R"
						target = "OpenLips_OpenUpperLip_ZipLip50R"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip25L"
						target = "OpenLips_OpenUpperLip_ZipLip25L"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_ZipLip25R"
						target = "OpenLips_OpenUpperLip_ZipLip25R"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip00L"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip00L"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip00R"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip00R"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip100L"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip100L"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip100R"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip100R"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip75L"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip75L"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip75R"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip75R"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip50L"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip50L"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip50R"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip50R"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip25L"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip25L"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip25R"
						target = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip25R"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip00L"
						target = "OpenUpperLip_SmileFull_ZipLip00L"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip00R"
						target = "OpenUpperLip_SmileFull_ZipLip00R"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip100L"
						target = "OpenUpperLip_SmileFull_ZipLip100L"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip100R"
						target = "OpenUpperLip_SmileFull_ZipLip100R"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip75L"
						target = "OpenUpperLip_SmileFull_ZipLip75L"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip75R"
						target = "OpenUpperLip_SmileFull_ZipLip75R"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip50L"
						target = "OpenUpperLip_SmileFull_ZipLip50L"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip50R"
						target = "OpenUpperLip_SmileFull_ZipLip50R"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip25L"
						target = "OpenUpperLip_SmileFull_ZipLip25L"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenUpperLip_SmileFull_ZipLip25R"
						target = "OpenUpperLip_SmileFull_ZipLip25R"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip00L"
						target = "OpenLowerLip_SmileFull_ZipLip00L"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip00R"
						target = "OpenLowerLip_SmileFull_ZipLip00R"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip100L"
						target = "OpenLowerLip_SmileFull_ZipLip100L"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip100R"
						target = "OpenLowerLip_SmileFull_ZipLip100R"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip75L"
						target = "OpenLowerLip_SmileFull_ZipLip75L"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip75R"
						target = "OpenLowerLip_SmileFull_ZipLip75R"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip50L"
						target = "OpenLowerLip_SmileFull_ZipLip50L"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip50R"
						target = "OpenLowerLip_SmileFull_ZipLip50R"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip25L"
						target = "OpenLowerLip_SmileFull_ZipLip25L"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLowerLip_SmileFull_ZipLip25R"
						target = "OpenLowerLip_SmileFull_ZipLip25R"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip00L"
						target = "OpenLips_SmileFull_ZipLip00L"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip00R"
						target = "OpenLips_SmileFull_ZipLip00R"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip100L"
						target = "OpenLips_SmileFull_ZipLip100L"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip100R"
						target = "OpenLips_SmileFull_ZipLip100R"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip75L"
						target = "OpenLips_SmileFull_ZipLip75L"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip75R"
						target = "OpenLips_SmileFull_ZipLip75R"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip50L"
						target = "OpenLips_SmileFull_ZipLip50L"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip50R"
						target = "OpenLips_SmileFull_ZipLip50R"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip25L"
						target = "OpenLips_SmileFull_ZipLip25L"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_SmileFull_ZipLip25R"
						target = "OpenLips_SmileFull_ZipLip25R"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip00L"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip00L"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip00R"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip00R"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip100L"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip100L"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip100R"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip100R"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip75L"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip75L"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip75R"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip75R"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip50L"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip50L"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip50R"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip50R"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip25L"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip25L"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenLowerLip_SmileFull_ZipLip25R"
						target = "OpenLips_OpenLowerLip_SmileFull_ZipLip25R"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip00L"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip00L"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip00R"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip00R"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip100L"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip100L"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip100R"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip100R"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip75L"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip75L"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip75R"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip75R"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip50L"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip50L"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip50R"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip50R"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip25L"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip25L"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_OpenUpperLip_SmileFull_ZipLip25R"
						target = "OpenLips_OpenUpperLip_SmileFull_ZipLip25R"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip00L"
						target = "SmileFull_ZipLip00L"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip00R"
						target = "SmileFull_ZipLip00R"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip100L"
						target = "SmileFull_ZipLip100L"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip100R"
						target = "SmileFull_ZipLip100R"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip75L"
						target = "SmileFull_ZipLip75L"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip75R"
						target = "SmileFull_ZipLip75R"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip50L"
						target = "SmileFull_ZipLip50L"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip50R"
						target = "SmileFull_ZipLip50R"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip25L"
						target = "SmileFull_ZipLip25L"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "SmileFull_ZipLip25R"
						target = "SmileFull_ZipLip25R"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * ((((min(1, (-min(0, (-1 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 0))))) * min(max((multi_Smile - -1) / (0 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_Smile - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_Smile)))) - 1)) + ((min(1, (-min(0, (0 - multi_Smile)))) * min(1, (-min(0, (multi_Smile - 1))))) * (1 - (min(max((multi_Smile - 0) / (1 - 0), 0), 1))))) * (Smile))) * (1 - PuckerLipLo)) * (1 - PuckerLipUp))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip00L"
						target = "OpenJaw_ZipLip00L"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip00R"
						target = "OpenJaw_ZipLip00R"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip100L"
						target = "OpenJaw_ZipLip100L"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip100R"
						target = "OpenJaw_ZipLip100R"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip75L"
						target = "OpenJaw_ZipLip75L"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip75R"
						target = "OpenJaw_ZipLip75R"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip50L"
						target = "OpenJaw_ZipLip50L"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip50R"
						target = "OpenJaw_ZipLip50R"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip25L"
						target = "OpenJaw_ZipLip25L"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_ZipLip25R"
						target = "OpenJaw_ZipLip25R"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip00L"
						target = "OpenJaw_OpenLips_ZipLip00L"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip00R"
						target = "OpenJaw_OpenLips_ZipLip00R"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip100L"
						target = "OpenJaw_OpenLips_ZipLip100L"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip100R"
						target = "OpenJaw_OpenLips_ZipLip100R"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip75L"
						target = "OpenJaw_OpenLips_ZipLip75L"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip75R"
						target = "OpenJaw_OpenLips_ZipLip75R"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip50L"
						target = "OpenJaw_OpenLips_ZipLip50L"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip50R"
						target = "OpenJaw_OpenLips_ZipLip50R"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip25L"
						target = "OpenJaw_OpenLips_ZipLip25L"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_ZipLip25R"
						target = "OpenJaw_OpenLips_ZipLip25R"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip00L"
						target = "OpenJaw_OpenLowerLip_ZipLip00L"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip00R"
						target = "OpenJaw_OpenLowerLip_ZipLip00R"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip100L"
						target = "OpenJaw_OpenLowerLip_ZipLip100L"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip100R"
						target = "OpenJaw_OpenLowerLip_ZipLip100R"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip75L"
						target = "OpenJaw_OpenLowerLip_ZipLip75L"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip75R"
						target = "OpenJaw_OpenLowerLip_ZipLip75R"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip50L"
						target = "OpenJaw_OpenLowerLip_ZipLip50L"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip50R"
						target = "OpenJaw_OpenLowerLip_ZipLip50R"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip25L"
						target = "OpenJaw_OpenLowerLip_ZipLip25L"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_ZipLip25R"
						target = "OpenJaw_OpenLowerLip_ZipLip25R"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip00L"
						target = "OpenJaw_OpenUpperLip_ZipLip00L"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip00R"
						target = "OpenJaw_OpenUpperLip_ZipLip00R"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip100L"
						target = "OpenJaw_OpenUpperLip_ZipLip100L"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip100R"
						target = "OpenJaw_OpenUpperLip_ZipLip100R"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip75L"
						target = "OpenJaw_OpenUpperLip_ZipLip75L"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip75R"
						target = "OpenJaw_OpenUpperLip_ZipLip75R"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip50L"
						target = "OpenJaw_OpenUpperLip_ZipLip50L"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip50R"
						target = "OpenJaw_OpenUpperLip_ZipLip50R"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip25L"
						target = "OpenJaw_OpenUpperLip_ZipLip25L"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenUpperLip_ZipLip25R"
						target = "OpenJaw_OpenUpperLip_ZipLip25R"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip00L"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip00L"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip00R"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip00R"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip100L"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip100L"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip100R"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip100R"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip75L"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip75L"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip75R"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip75R"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip50L"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip50L"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip50R"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip50R"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip25L"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip25L"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip25R"
						target = "OpenJaw_OpenLips_OpenLowerLip_ZipLip25R"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipLoV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip00L"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip00L"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip00R"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip00R"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip100L"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip100L"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip100R"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip100R"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip75L"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip75L"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip75R"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip75R"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip50L"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip50L"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip50R"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip50R"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip25L"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip25L"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip25R"
						target = "OpenJaw_OpenLips_OpenUpperLip_ZipLip25R"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip00L"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip00L"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip00R"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip00R"
						expression = "(((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip100L"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip100L"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip100R"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip100R"
						expression = "(((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip75L"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip75L"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip75R"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip75R"
						expression = "(((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip50L"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip50L"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip50R"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip50R"
						expression = "(((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip25L"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip25L"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip25R"
						target = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip25R"
						expression = "(((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip00L"
						target = "PuckerLipLo_PuckerLipUp_ZipLip00L"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip00R"
						target = "PuckerLipLo_PuckerLipUp_ZipLip00R"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip100L"
						target = "PuckerLipLo_PuckerLipUp_ZipLip100L"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip100R"
						target = "PuckerLipLo_PuckerLipUp_ZipLip100R"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip75L"
						target = "PuckerLipLo_PuckerLipUp_ZipLip75L"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip75R"
						target = "PuckerLipLo_PuckerLipUp_ZipLip75R"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip50L"
						target = "PuckerLipLo_PuckerLipUp_ZipLip50L"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip50R"
						target = "PuckerLipLo_PuckerLipUp_ZipLip50R"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip25L"
						target = "PuckerLipLo_PuckerLipUp_ZipLip25L"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "PuckerLipLo_PuckerLipUp_ZipLip25R"
						target = "PuckerLipLo_PuckerLipUp_ZipLip25R"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00L"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00L"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00R"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00R"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100L"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100L"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100R"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100R"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75L"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75L"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75R"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75R"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50L"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50L"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50R"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50R"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25L"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25L"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25R"
						target = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25R"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip00L"
						target = "OpenJaw_PuckerLipUp_ZipLip00L"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip00R"
						target = "OpenJaw_PuckerLipUp_ZipLip00R"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip100L"
						target = "OpenJaw_PuckerLipUp_ZipLip100L"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip100R"
						target = "OpenJaw_PuckerLipUp_ZipLip100R"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip75L"
						target = "OpenJaw_PuckerLipUp_ZipLip75L"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip75R"
						target = "OpenJaw_PuckerLipUp_ZipLip75R"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip50L"
						target = "OpenJaw_PuckerLipUp_ZipLip50L"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip50R"
						target = "OpenJaw_PuckerLipUp_ZipLip50R"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip25L"
						target = "OpenJaw_PuckerLipUp_ZipLip25L"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipUp_ZipLip25R"
						target = "OpenJaw_PuckerLipUp_ZipLip25R"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip00L"
						target = "OpenJaw_PuckerLipLo_ZipLip00L"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip00R"
						target = "OpenJaw_PuckerLipLo_ZipLip00R"
						expression = "((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip100L"
						target = "OpenJaw_PuckerLipLo_ZipLip100L"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip100R"
						target = "OpenJaw_PuckerLipLo_ZipLip100R"
						expression = "((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip75L"
						target = "OpenJaw_PuckerLipLo_ZipLip75L"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip75R"
						target = "OpenJaw_PuckerLipLo_ZipLip75R"
						expression = "((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip50L"
						target = "OpenJaw_PuckerLipLo_ZipLip50L"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip50R"
						target = "OpenJaw_PuckerLipLo_ZipLip50R"
						expression = "((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip25L"
						target = "OpenJaw_PuckerLipLo_ZipLip25L"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_ZipLip25R"
						target = "OpenJaw_PuckerLipLo_ZipLip25R"
						expression = "((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip00L"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip00L"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip00R"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip00R"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip100L"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip100L"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip100R"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip100R"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip75L"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip75L"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip75R"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip75R"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip50L"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip50L"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip50R"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip50R"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip25L"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip25L"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip25R"
						target = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip25R"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(JawV, 0), 1))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00L"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00L"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00R"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00R"
						expression = "((((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100L"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100L"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100R"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100R"
						expression = "((((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75L"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75L"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75R"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75R"
						expression = "((((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50L"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50L"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50R"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50R"
						expression = "((((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25L"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25L"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25R"
						target = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25R"
						expression = "((((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus)) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip00L"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip00L"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip00R"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip00R"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip100L"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip100L"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip100R"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip100R"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip75L"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip75L"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip75R"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip75R"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip50L"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip50L"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip50R"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip50R"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip25L"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip25L"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip25R"
						target = "OpenJaw_OpenLips_PuckerLipLo_ZipLip25R"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipLo * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip00L"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip00L"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip00R"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip00R"
						expression = "(((((((min(1, (-min(0, (-11 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -10))))) * min(max((multi_ZipLips - -11) / (-10 - -11), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -10)))) - 1) * -(min(1, (-min(0, (-1 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * (1 - (min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip100L"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip100L"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip100R"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip100R"
						expression = "(((((((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 1)))) - 1) * -(min(1, (-min(0, (10 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (10 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 11))))) * (1 - (min(max((multi_ZipLips - 10) / (11 - 10), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip75L"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip75L"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip75R"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip75R"
						expression = "(((((((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0.5)))) - 1) * -(min(1, (-min(0, (0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 1))))) * (1 - (min(max((multi_ZipLips - 0.5) / (1 - 0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip50L"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip50L"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip50R"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip50R"
						expression = "(((((((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - 0)))) - 1) * -(min(1, (-min(0, (0 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (0 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0.5))))) * (1 - (min(max((multi_ZipLips - 0) / (0.5 - 0), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip25L"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip25L"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip25R"
						target = "OpenJaw_OpenLips_PuckerLipUp_ZipLip25R"
						expression = "(((((((min(1, (-min(0, (-1 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - -0.5))))) * min(max((multi_ZipLips - -1) / (-0.5 - -1), 0), 1)) + (-(min(1, (-min(0, (multi_ZipLips - -0.5)))) - 1) * -(min(1, (-min(0, (-0.5 - multi_ZipLips)))) - 1)) + ((min(1, (-min(0, (-0.5 - multi_ZipLips)))) * min(1, (-min(0, (multi_ZipLips - 0))))) * (1 - (min(max((multi_ZipLips - -0.5) / (0 - -0.5), 0), 1))))) * (ZipLips)) * PuckerLipUp * (min(max(LipsV, 0), 1)) * (min(max(JawV, 0), 1))) * (1 - (min(max(LipUpV, 0), 1)) * (min(max(LipLoV, 0), 1)))) * (1 - Platysmus))"
					},
					{
						_class = "MorphRule"
						name = "TongueBack_TongueCurlDown"
						target = "TongueBack_TongueCurlDown"
						expression = "((min(max(TongueCurl, 0), 1)) * (1 - (min(max(TongueD + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "OpenJaw_TongueOut"
						target = "OpenJaw_TongueOut"
						expression = "((min(max(TongueD, 0), 1)) * (min(max(JawV, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "TongueCurlDown_TongueOut"
						target = "TongueCurlDown_TongueOut"
						expression = "((min(max(TongueD, 0), 1)) * (min(max(TongueCurl, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "TongueCurlUp_TongueOut"
						target = "TongueCurlUp_TongueOut"
						expression = "((min(max(TongueD, 0), 1)) * (1 - (min(max(TongueCurl + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "TongueBack_TongueV"
						target = "TongueBack_TongueV"
						expression = "(TongueV * (1 - (min(max(TongueD + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "TongueBack_TongueCurlDown_TongueV"
						target = "TongueBack_TongueCurlDown_TongueV"
						expression = "(TongueV * (min(max(TongueCurl, 0), 1)) * (1 - (min(max(TongueD + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "TongueCurlDown_TongueV"
						target = "TongueCurlDown_TongueV"
						expression = "(TongueV * (min(max(TongueCurl, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "TongueCurlUp_TongueV"
						target = "TongueCurlUp_TongueV"
						expression = "(TongueV * (1 - (min(max(TongueCurl + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "TongueCurlDown_TongueOut_TongueV"
						target = "TongueCurlDown_TongueOut_TongueV"
						expression = "(TongueV * (min(max(TongueD, 0), 1)) * (min(max(TongueCurl, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "TongueCurlUp_TongueOut_TongueV"
						target = "TongueCurlUp_TongueOut_TongueV"
						expression = "(TongueV * (min(max(TongueD, 0), 1)) * (1 - (min(max(TongueCurl + 1, 0), 1))))"
					},
					{
						_class = "MorphRule"
						name = "TongueOut_TongueV"
						target = "TongueOut_TongueV"
						expression = "(TongueV * (min(max(TongueD, 0), 1)))"
					},
					{
						_class = "MorphRule"
						name = "eyes_right"
						target = "eyes_right"
						expression = "min( max(eyes_rightleft, -45), 0 )"
					},
					{
						_class = "MorphRule"
						name = "eyes_left"
						target = "eyes_left"
						expression = "min( max(eyes_rightleft, 0), 45 )"
					},
					{
						_class = "MorphRule"
						name = "eyes_up"
						target = "eyes_up"
						expression = "min( max(eyes_updown, -45), 0 )"
					},
					{
						_class = "MorphRule"
						name = "eyes_down"
						target = "eyes_down"
						expression = "min( max(eyes_updown, 0), 45 )"
					},
				]
			},
			{
				_class = "MorphControlList"
				children = 
				[
					{
						_class = "MorphControl"
						name = "CloseLid"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "multi_CloseLid"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "blink"
						stereo = false
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "InnerSquint"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "OuterSquint"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "BrowInV"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "BrowOutV"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "Frown"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "NoseV"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "NostrilFlare"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "CheekV"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "CheekH"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "JawD"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "JawH"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "JawV"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "LipsV"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "LipUpV"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "LipLoV"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "Smile"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "multi_Smile"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "Platysmus"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "FoldLipUp"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "FoldLipLo"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "PuckerLipUp"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "PuckerLipLo"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "LipCnrTwst"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "Dimple"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "PuffLipUp"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "PuffLipLo"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "ScalpD"
						stereo = true
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "TongueD"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "TongueH"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "TongueV"
						stereo = false
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "TongueCurl"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "TongueFunnel"
						stereo = false
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "TongueWidth"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "ZipLips"
						stereo = true
						min_value = 0.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "multi_ZipLips"
						stereo = false
						min_value = -1.0
						max_value = 1.0
					},
					{
						_class = "MorphControl"
						name = "eyes_updown"
						stereo = false
						min_value = -45.0
						max_value = 45.0
					},
					{
						_class = "MorphControl"
						name = "eyes_rightleft"
						stereo = false
						min_value = -45.0
						max_value = 45.0
					},
				]
			},
			{
				_class = "CommandList"
				command_buffer = """
		CopyNode( SourceNode = "BlowNostrilL", Name = "BlowNostrilLA" );
		CopyNode( SourceNode = "BlowNostrilR", Name = "BlowNostrilRA" );
		CopyNode( SourceNode = "InflateCheekL", Name = "InflateCheekLA" );
		CopyNode( SourceNode = "InflateCheekR", Name = "InflateCheekRA" );
		CopyNode( SourceNode = "InnerSquintL", Name = "InnerSquintLA" );
		CopyNode( SourceNode = "InnerSquintR", Name = "InnerSquintRA" );
		CopyNode( SourceNode = "JutJaw", Name = "JutJawA" );
		CopyNode( SourceNode = "JutUpperLipL", Name = "JutUpperLipLA" );
		CopyNode( SourceNode = "JutUpperLipR", Name = "JutUpperLipRA" );
		CopyNode( SourceNode = "LipCnrTwstL", Name = "LipCnrTwstLA" );
		CopyNode( SourceNode = "LipCnrTwstR", Name = "LipCnrTwstRA" );
		CopyNode( SourceNode = "OpenJaw", Name = "OpenJawA" );
		CopyNode( SourceNode = "OpenLipsL", Name = "OpenLipsLA" );
		CopyNode( SourceNode = "OpenLipsR", Name = "OpenLipsRA" );
		CopyNode( SourceNode = "OpenLowerLipL", Name = "OpenLowerLipLA" );
		CopyNode( SourceNode = "OpenLowerLipR", Name = "OpenLowerLipRA" );
		CopyNode( SourceNode = "OpenUpperLipL", Name = "OpenUpperLipLA" );
		CopyNode( SourceNode = "OpenUpperLipR", Name = "OpenUpperLipRA" );
		CopyNode( SourceNode = "BrowOutVL", Name = "BrowOutVLA" );
		CopyNode( SourceNode = "BrowOutVR", Name = "BrowOutVRA" );
		CopyNode( SourceNode = "OuterSquintL", Name = "OuterSquintLA" );
		CopyNode( SourceNode = "OuterSquintR", Name = "OuterSquintRA" );
		CopyNode( SourceNode = "PlatysmusL", Name = "PlatysmusLA" );
		CopyNode( SourceNode = "PlatysmusR", Name = "PlatysmusRA" );
		CopyNode( SourceNode = "PressNoseL", Name = "PressNoseLA" );
		CopyNode( SourceNode = "PressNoseR", Name = "PressNoseRA" );
		CopyNode( SourceNode = "RaiseBrowInL", Name = "RaiseBrowInLA" );
		CopyNode( SourceNode = "RaiseBrowInR", Name = "RaiseBrowInRA" );
		CopyNode( SourceNode = "RaiseChinL", Name = "RaiseChinLA" );
		CopyNode( SourceNode = "RaiseChinR", Name = "RaiseChinRA" );
		CopyNode( SourceNode = "ScalpBackL", Name = "ScalpBackLA" );
		CopyNode( SourceNode = "ScalpBackR", Name = "ScalpBackRA" );
		CopyNode( SourceNode = "ScalpForwardL", Name = "ScalpForwardLA" );
		CopyNode( SourceNode = "ScalpForwardR", Name = "ScalpForwardRA" );
		CopyNode( SourceNode = "CheekVL", Name = "CheekVLA" );
		CopyNode( SourceNode = "CheekVR", Name = "CheekVRA" );
		CopyNode( SourceNode = "ClenchJaw", Name = "ClenchJawA" );
		CopyNode( SourceNode = "SmileFlatL", Name = "SmileFlatLA" );
		CopyNode( SourceNode = "SmileFlatR", Name = "SmileFlatRA" );
		CopyNode( SourceNode = "SmileFullL", Name = "SmileFullLA" );
		CopyNode( SourceNode = "SmileFullR", Name = "SmileFullRA" );
		CopyNode( SourceNode = "SmileSharpL", Name = "SmileSharpLA" );
		CopyNode( SourceNode = "SmileSharpR", Name = "SmileSharpRA" );
		CopyNode( SourceNode = "SneerNoseL", Name = "SneerNoseLA" );
		CopyNode( SourceNode = "SneerNoseR", Name = "SneerNoseRA" );
		CopyNode( SourceNode = "SuckJaw", Name = "SuckJawA" );
		CopyNode( SourceNode = "SuckLipLoL", Name = "SuckLipLoLA" );
		CopyNode( SourceNode = "SuckLipLoR", Name = "SuckLipLoRA" );
		CopyNode( SourceNode = "SuckLipUpL", Name = "SuckLipUpLA" );
		CopyNode( SourceNode = "SuckLipUpR", Name = "SuckLipUpRA" );
		CopyNode( SourceNode = "CloseLidLoL", Name = "CloseLidLoLA" );
		CopyNode( SourceNode = "CloseLidLoR", Name = "CloseLidLoRA" );
		CopyNode( SourceNode = "SuckNostrilL", Name = "SuckNostrilLA" );
		CopyNode( SourceNode = "SuckNostrilR", Name = "SuckNostrilRA" );
		CopyNode( SourceNode = "WrinkleNoseL", Name = "WrinkleNoseLA" );
		CopyNode( SourceNode = "WrinkleNoseR", Name = "WrinkleNoseRA" );
		CopyNode( SourceNode = "BrowOutV_Frown_RaiseBrowInL", Name = "BrowOutV_Frown_RaiseBrowInLA" );
		CopyNode( SourceNode = "BrowOutV_Frown_RaiseBrowInR", Name = "BrowOutV_Frown_RaiseBrowInRA" );
		CopyNode( SourceNode = "BrowOutV_RaiseBrowInL", Name = "BrowOutV_RaiseBrowInLA" );
		CopyNode( SourceNode = "BrowOutV_RaiseBrowInR", Name = "BrowOutV_RaiseBrowInRA" );
		CopyNode( SourceNode = "CheekV_SmileFullL", Name = "CheekV_SmileFullLA" );
		CopyNode( SourceNode = "CheekV_SmileFullR", Name = "CheekV_SmileFullRA" );
		CopyNode( SourceNode = "CheekV_SneerNoseL", Name = "CheekV_SneerNoseLA" );
		CopyNode( SourceNode = "CheekV_SneerNoseR", Name = "CheekV_SneerNoseRA" );
		CopyNode( SourceNode = "CompressLips_RaiseChinL", Name = "CompressLips_RaiseChinLA" );
		CopyNode( SourceNode = "CompressLips_RaiseChinR", Name = "CompressLips_RaiseChinRA" );
		CopyNode( SourceNode = "CloseLidUpL", Name = "CloseLidUpLA" );
		CopyNode( SourceNode = "CloseLidUpR", Name = "CloseLidUpRA" );
		CopyNode( SourceNode = "Dimple_OpenLipsL", Name = "Dimple_OpenLipsLA" );
		CopyNode( SourceNode = "Dimple_OpenLipsR", Name = "Dimple_OpenLipsRA" );
		CopyNode( SourceNode = "Frown_WrinkleNoseL", Name = "Frown_WrinkleNoseLA" );
		CopyNode( SourceNode = "Frown_WrinkleNoseR", Name = "Frown_WrinkleNoseRA" );
		CopyNode( SourceNode = "InnerSquint_OuterSquintL", Name = "InnerSquint_OuterSquintLA" );
		CopyNode( SourceNode = "InnerSquint_OuterSquintR", Name = "InnerSquint_OuterSquintRA" );
		CopyNode( SourceNode = "JutUpperLip_RaiseChinL", Name = "JutUpperLip_RaiseChinLA" );
		CopyNode( SourceNode = "JutUpperLip_RaiseChinR", Name = "JutUpperLip_RaiseChinRA" );
		CopyNode( SourceNode = "LipCnrTwst_OpenUpperLip_SuckLipLoL", Name = "LipCnrTwst_OpenUpperLip_SuckLipLoLA" );
		CopyNode( SourceNode = "LipCnrTwst_OpenUpperLip_SuckLipLoR", Name = "LipCnrTwst_OpenUpperLip_SuckLipLoRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLipsL", Name = "OpenJaw_OpenLipsLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLipsR", Name = "OpenJaw_OpenLipsRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_Platysmus_SmileFullL", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_Platysmus_SmileFullLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_Platysmus_SmileFullR", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_Platysmus_SmileFullRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLipL", Name = "OpenJaw_OpenLowerLip_OpenUpperLipLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLipR", Name = "OpenJaw_OpenLowerLip_OpenUpperLipRA" );
		CopyNode( SourceNode = "CompressLipsL", Name = "CompressLipsLA" );
		CopyNode( SourceNode = "CompressLipsR", Name = "CompressLipsRA" );
		CopyNode( SourceNode = "OpenLips_SmileFullL", Name = "OpenLips_SmileFullLA" );
		CopyNode( SourceNode = "OpenLips_SmileFullR", Name = "OpenLips_SmileFullRA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_Platysmus_SmileFullL", Name = "OpenLowerLip_OpenUpperLip_Platysmus_SmileFullLA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_Platysmus_SmileFullR", Name = "OpenLowerLip_OpenUpperLip_Platysmus_SmileFullRA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLipL", Name = "OpenLowerLip_OpenUpperLipLA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLipR", Name = "OpenLowerLip_OpenUpperLipRA" );
		CopyNode( SourceNode = "OpenLowerLip_SuckLipLoL", Name = "OpenLowerLip_SuckLipLoLA" );
		CopyNode( SourceNode = "OpenLowerLip_SuckLipLoR", Name = "OpenLowerLip_SuckLipLoRA" );
		CopyNode( SourceNode = "OpenUpperLip_SuckLipUpL", Name = "OpenUpperLip_SuckLipUpLA" );
		CopyNode( SourceNode = "OpenUpperLip_SuckLipUpR", Name = "OpenUpperLip_SuckLipUpRA" );
		CopyNode( SourceNode = "DeflateCheekL", Name = "DeflateCheekLA" );
		CopyNode( SourceNode = "DeflateCheekR", Name = "DeflateCheekRA" );
		CopyNode( SourceNode = "DimpleL", Name = "DimpleLA" );
		CopyNode( SourceNode = "DimpleR", Name = "DimpleRA" );
		CopyNode( SourceNode = "FrownL", Name = "FrownLA" );
		CopyNode( SourceNode = "FrownR", Name = "FrownRA" );
		CopyNode( SourceNode = "CheekV_OuterSquintL", Name = "CheekV_OuterSquintLA" );
		CopyNode( SourceNode = "CheekV_OuterSquintR", Name = "CheekV_OuterSquintRA" );
		CopyNode( SourceNode = "CheekV_InnerSquintL", Name = "CheekV_InnerSquintLA" );
		CopyNode( SourceNode = "CheekV_InnerSquintR", Name = "CheekV_InnerSquintRA" );
		CopyNode( SourceNode = "CheekV_InnerSquint_OuterSquintL", Name = "CheekV_InnerSquint_OuterSquintLA" );
		CopyNode( SourceNode = "CheekV_InnerSquint_OuterSquintR", Name = "CheekV_InnerSquint_OuterSquintRA" );
		CopyNode( SourceNode = "BrowOutV_InnerSquintL", Name = "BrowOutV_InnerSquintLA" );
		CopyNode( SourceNode = "BrowOutV_InnerSquintR", Name = "BrowOutV_InnerSquintRA" );
		CopyNode( SourceNode = "BrowOutV_OuterSquintL", Name = "BrowOutV_OuterSquintLA" );
		CopyNode( SourceNode = "BrowOutV_OuterSquintR", Name = "BrowOutV_OuterSquintRA" );
		CopyNode( SourceNode = "BrowOutV_InnerSquint_OuterSquintL", Name = "BrowOutV_InnerSquint_OuterSquintLA" );
		CopyNode( SourceNode = "BrowOutV_InnerSquint_OuterSquintR", Name = "BrowOutV_InnerSquint_OuterSquintRA" );
		CopyNode( SourceNode = "RaiseBrowIn_InnerSquintL", Name = "RaiseBrowIn_InnerSquintLA" );
		CopyNode( SourceNode = "RaiseBrowIn_InnerSquintR", Name = "RaiseBrowIn_InnerSquintRA" );
		CopyNode( SourceNode = "CloseLidLo_CheekVL", Name = "CloseLidLo_CheekVLA" );
		CopyNode( SourceNode = "CloseLidLo_CheekVR", Name = "CloseLidLo_CheekVRA" );
		CopyNode( SourceNode = "CloseLidUp_RaiseBrowInL", Name = "CloseLidUp_RaiseBrowInLA" );
		CopyNode( SourceNode = "CloseLidUp_RaiseBrowInR", Name = "CloseLidUp_RaiseBrowInRA" );
		CopyNode( SourceNode = "CloseLidUp_OuterSquintL", Name = "CloseLidUp_OuterSquintLA" );
		CopyNode( SourceNode = "CloseLidUp_OuterSquintR", Name = "CloseLidUp_OuterSquintRA" );
		CopyNode( SourceNode = "CloseLidUp_InnerSquintL", Name = "CloseLidUp_InnerSquintLA" );
		CopyNode( SourceNode = "CloseLidUp_InnerSquintR", Name = "CloseLidUp_InnerSquintRA" );
		CopyNode( SourceNode = "CloseLidUp_InnerSquint_OuterSquintL", Name = "CloseLidUp_InnerSquint_OuterSquintLA" );
		CopyNode( SourceNode = "CloseLidUp_InnerSquint_OuterSquintR", Name = "CloseLidUp_InnerSquint_OuterSquintRA" );
		CopyNode( SourceNode = "InnerSquint_OuterSquint_RaiseBrowInL", Name = "InnerSquint_OuterSquint_RaiseBrowInLA" );
		CopyNode( SourceNode = "InnerSquint_OuterSquint_RaiseBrowInR", Name = "InnerSquint_OuterSquint_RaiseBrowInRA" );
		CopyNode( SourceNode = "CloseLidUp_InnerSquint_OuterSquint_RaiseBrowInL", Name = "CloseLidUp_InnerSquint_OuterSquint_RaiseBrowInLA" );
		CopyNode( SourceNode = "CloseLidUp_InnerSquint_OuterSquint_RaiseBrowInR", Name = "CloseLidUp_InnerSquint_OuterSquint_RaiseBrowInRA" );
		CopyNode( SourceNode = "BrowOutV_CloseLidUpL", Name = "BrowOutV_CloseLidUpLA" );
		CopyNode( SourceNode = "BrowOutV_CloseLidUpR", Name = "BrowOutV_CloseLidUpRA" );
		CopyNode( SourceNode = "BrowOutV_FrownL", Name = "BrowOutV_FrownLA" );
		CopyNode( SourceNode = "BrowOutV_FrownR", Name = "BrowOutV_FrownRA" );
		CopyNode( SourceNode = "BrowOutV_CloseLidUp_RaiseBrowInL", Name = "BrowOutV_CloseLidUp_RaiseBrowInLA" );
		CopyNode( SourceNode = "BrowOutV_CloseLidUp_RaiseBrowInR", Name = "BrowOutV_CloseLidUp_RaiseBrowInRA" );
		CopyNode( SourceNode = "BrowOutV_CloseLidUp_FrownL", Name = "BrowOutV_CloseLidUp_FrownLA" );
		CopyNode( SourceNode = "BrowOutV_CloseLidUp_FrownR", Name = "BrowOutV_CloseLidUp_FrownRA" );
		CopyNode( SourceNode = "InnerSquint_SneerNoseL", Name = "InnerSquint_SneerNoseLA" );
		CopyNode( SourceNode = "InnerSquint_SneerNoseR", Name = "InnerSquint_SneerNoseRA" );
		CopyNode( SourceNode = "InnerSquint_OuterSquint_SneerNoseL", Name = "InnerSquint_OuterSquint_SneerNoseLA" );
		CopyNode( SourceNode = "InnerSquint_OuterSquint_SneerNoseR", Name = "InnerSquint_OuterSquint_SneerNoseRA" );
		CopyNode( SourceNode = "PuckerLipUpL", Name = "PuckerLipUpLA" );
		CopyNode( SourceNode = "PuckerLipUpR", Name = "PuckerLipUpRA" );
		CopyNode( SourceNode = "PuckerLipLoL", Name = "PuckerLipLoLA" );
		CopyNode( SourceNode = "PuckerLipLoR", Name = "PuckerLipLoRA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUpL", Name = "PuckerLipLo_PuckerLipUpLA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUpR", Name = "PuckerLipLo_PuckerLipUpRA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUpL", Name = "OpenJaw_PuckerLipUpLA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUpR", Name = "OpenJaw_PuckerLipUpRA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLoL", Name = "OpenJaw_PuckerLipLoLA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLoR", Name = "OpenJaw_PuckerLipLoRA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUpL", Name = "OpenJaw_PuckerLipLo_PuckerLipUpLA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUpR", Name = "OpenJaw_PuckerLipLo_PuckerLipUpRA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipUpL", Name = "OpenLips_PuckerLipUpLA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipUpR", Name = "OpenLips_PuckerLipUpRA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLoL", Name = "OpenLips_PuckerLipLoLA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLoR", Name = "OpenLips_PuckerLipLoRA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUpL", Name = "OpenLips_PuckerLipLo_PuckerLipUpLA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUpR", Name = "OpenLips_PuckerLipLo_PuckerLipUpRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUpL", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUpLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUpR", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUpRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLoL", Name = "OpenJaw_OpenLips_PuckerLipLoLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLoR", Name = "OpenJaw_OpenLips_PuckerLipLoRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUpL", Name = "OpenJaw_OpenLips_PuckerLipUpLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUpR", Name = "OpenJaw_OpenLips_PuckerLipUpRA" );
		CopyNode( SourceNode = "Dimple_PuckerLipLoL", Name = "Dimple_PuckerLipLoLA" );
		CopyNode( SourceNode = "Dimple_PuckerLipLoR", Name = "Dimple_PuckerLipLoRA" );
		CopyNode( SourceNode = "Dimple_PuckerLipUpL", Name = "Dimple_PuckerLipUpLA" );
		CopyNode( SourceNode = "Dimple_PuckerLipUpR", Name = "Dimple_PuckerLipUpRA" );
		CopyNode( SourceNode = "Dimple_PuckerLipLo_PuckerLipUpL", Name = "Dimple_PuckerLipLo_PuckerLipUpLA" );
		CopyNode( SourceNode = "Dimple_PuckerLipLo_PuckerLipUpR", Name = "Dimple_PuckerLipLo_PuckerLipUpRA" );
		CopyNode( SourceNode = "Dimple_OpenLips_PuckerLipLo_PuckerLipUpL", Name = "Dimple_OpenLips_PuckerLipLo_PuckerLipUpLA" );
		CopyNode( SourceNode = "Dimple_OpenLips_PuckerLipLo_PuckerLipUpR", Name = "Dimple_OpenLips_PuckerLipLo_PuckerLipUpRA" );
		CopyNode( SourceNode = "FunnelLipUpL", Name = "FunnelLipUpLA" );
		CopyNode( SourceNode = "FunnelLipUpR", Name = "FunnelLipUpRA" );
		CopyNode( SourceNode = "FunnelLipLoL", Name = "FunnelLipLoLA" );
		CopyNode( SourceNode = "FunnelLipLoR", Name = "FunnelLipLoRA" );
		CopyNode( SourceNode = "FunnelLipLo_FunnelLipUpL", Name = "FunnelLipLo_FunnelLipUpLA" );
		CopyNode( SourceNode = "FunnelLipLo_FunnelLipUpR", Name = "FunnelLipLo_FunnelLipUpRA" );
		CopyNode( SourceNode = "Dimple_FunnelLipLoL", Name = "Dimple_FunnelLipLoLA" );
		CopyNode( SourceNode = "Dimple_FunnelLipLoR", Name = "Dimple_FunnelLipLoRA" );
		CopyNode( SourceNode = "Dimple_FunnelLipUpL", Name = "Dimple_FunnelLipUpLA" );
		CopyNode( SourceNode = "Dimple_FunnelLipUpR", Name = "Dimple_FunnelLipUpRA" );
		CopyNode( SourceNode = "Dimple_FunnelLipLo_FunnelLipUpL", Name = "Dimple_FunnelLipLo_FunnelLipUpLA" );
		CopyNode( SourceNode = "Dimple_FunnelLipLo_FunnelLipUpR", Name = "Dimple_FunnelLipLo_FunnelLipUpRA" );
		CopyNode( SourceNode = "OpenJaw_FunnelLipUpL", Name = "OpenJaw_FunnelLipUpLA" );
		CopyNode( SourceNode = "OpenJaw_FunnelLipUpR", Name = "OpenJaw_FunnelLipUpRA" );
		CopyNode( SourceNode = "OpenJaw_FunnelLipLoL", Name = "OpenJaw_FunnelLipLoLA" );
		CopyNode( SourceNode = "OpenJaw_FunnelLipLoR", Name = "OpenJaw_FunnelLipLoRA" );
		CopyNode( SourceNode = "OpenJaw_FunnelLipLo_FunnelLipUpL", Name = "OpenJaw_FunnelLipLo_FunnelLipUpLA" );
		CopyNode( SourceNode = "OpenJaw_FunnelLipLo_FunnelLipUpR", Name = "OpenJaw_FunnelLipLo_FunnelLipUpRA" );
		CopyNode( SourceNode = "PuffLipUpL", Name = "PuffLipUpLA" );
		CopyNode( SourceNode = "PuffLipUpR", Name = "PuffLipUpRA" );
		CopyNode( SourceNode = "PuffLipLoL", Name = "PuffLipLoLA" );
		CopyNode( SourceNode = "PuffLipLoR", Name = "PuffLipLoRA" );
		CopyNode( SourceNode = "PuffLipUp_PuffLipLoL", Name = "PuffLipUp_PuffLipLoLA" );
		CopyNode( SourceNode = "PuffLipUp_PuffLipLoR", Name = "PuffLipUp_PuffLipLoRA" );
		CopyNode( SourceNode = "PuckerLipLo_PuffLiploL", Name = "PuckerLipLo_PuffLiploLA" );
		CopyNode( SourceNode = "PuckerLipLo_PuffLiploR", Name = "PuckerLipLo_PuffLiploRA" );
		CopyNode( SourceNode = "PuckerLipLo_PuffLipUpL", Name = "PuckerLipLo_PuffLipUpLA" );
		CopyNode( SourceNode = "PuckerLipLo_PuffLipUpR", Name = "PuckerLipLo_PuffLipUpRA" );
		CopyNode( SourceNode = "PuckerLipUp_PuffLipLoL", Name = "PuckerLipUp_PuffLipLoLA" );
		CopyNode( SourceNode = "PuckerLipUp_PuffLipLoR", Name = "PuckerLipUp_PuffLipLoRA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_PuffLipUpL", Name = "PuckerLipLo_PuckerLipUp_PuffLipUpLA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_PuffLipUpR", Name = "PuckerLipLo_PuckerLipUp_PuffLipUpRA" );
		CopyNode( SourceNode = "PuckerLipUp_PuffLipUpL", Name = "PuckerLipUp_PuffLipUpLA" );
		CopyNode( SourceNode = "PuckerLipUp_PuffLipUpR", Name = "PuckerLipUp_PuffLipUpRA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_PuffLipLoL", Name = "PuckerLipLo_PuckerLipUp_PuffLipLoLA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_PuffLipLoR", Name = "PuckerLipLo_PuckerLipUp_PuffLipLoRA" );
		CopyNode( SourceNode = "PuckerLipUp_PuffLipUp_PuffLipLoL", Name = "PuckerLipUp_PuffLipUp_PuffLipLoLA" );
		CopyNode( SourceNode = "PuckerLipUp_PuffLipUp_PuffLipLoR", Name = "PuckerLipUp_PuffLipUp_PuffLipLoRA" );
		CopyNode( SourceNode = "PuckerLipLo_PuffLipLo_PuffLipUpL", Name = "PuckerLipLo_PuffLipLo_PuffLipUpLA" );
		CopyNode( SourceNode = "PuckerLipLo_PuffLipLo_PuffLipUpR", Name = "PuckerLipLo_PuffLipLo_PuffLipUpRA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_PuffLipLo_PuffLipUpL", Name = "PuckerLipLo_PuckerLipUp_PuffLipLo_PuffLipUpLA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_PuffLipLo_PuffLipUpR", Name = "PuckerLipLo_PuckerLipUp_PuffLipLo_PuffLipUpRA" );
		CopyNode( SourceNode = "PuckerLipUp_RaiseChin_SneerNoseL", Name = "PuckerLipUp_RaiseChin_SneerNoseLA" );
		CopyNode( SourceNode = "PuckerLipUp_RaiseChin_SneerNoseR", Name = "PuckerLipUp_RaiseChin_SneerNoseRA" );
		CopyNode( SourceNode = "PuckerLipUp_RaiseChinL", Name = "PuckerLipUp_RaiseChinLA" );
		CopyNode( SourceNode = "PuckerLipUp_RaiseChinR", Name = "PuckerLipUp_RaiseChinRA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLipL", Name = "OpenLips_OpenUpperLipLA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLipR", Name = "OpenLips_OpenUpperLipRA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLipL", Name = "OpenLips_OpenLowerLipLA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLipR", Name = "OpenLips_OpenLowerLipRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLipL", Name = "OpenJaw_OpenLips_OpenUpperLipLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLipR", Name = "OpenJaw_OpenLips_OpenUpperLipRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLipL", Name = "OpenJaw_OpenLips_OpenLowerLipLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLipR", Name = "OpenJaw_OpenLips_OpenLowerLipRA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLipL", Name = "OpenJaw_OpenUpperLipLA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLipR", Name = "OpenJaw_OpenUpperLipRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLipL", Name = "OpenJaw_OpenLowerLipLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLipR", Name = "OpenJaw_OpenLowerLipRA" );
		CopyNode( SourceNode = "OpenUpperLip_PlatysmusL", Name = "OpenUpperLip_PlatysmusLA" );
		CopyNode( SourceNode = "OpenUpperLip_PlatysmusR", Name = "OpenUpperLip_PlatysmusRA" );
		CopyNode( SourceNode = "OpenLowerLip_PlatysmusL", Name = "OpenLowerLip_PlatysmusLA" );
		CopyNode( SourceNode = "OpenLowerLip_PlatysmusR", Name = "OpenLowerLip_PlatysmusRA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_PlatysmusL", Name = "OpenLowerLip_OpenUpperLip_PlatysmusLA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_PlatysmusR", Name = "OpenLowerLip_OpenUpperLip_PlatysmusRA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFullL", Name = "OpenUpperLip_SmileFullLA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFullR", Name = "OpenUpperLip_SmileFullRA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFullL", Name = "OpenLowerLip_SmileFullLA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFullR", Name = "OpenLowerLip_SmileFullRA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFullL", Name = "OpenLowerLip_OpenUpperLip_SmileFullLA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFullR", Name = "OpenLowerLip_OpenUpperLip_SmileFullRA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFullL", Name = "OpenLips_OpenUpperLip_SmileFullLA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFullR", Name = "OpenLips_OpenUpperLip_SmileFullRA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFullL", Name = "OpenLips_OpenLowerLip_SmileFullLA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFullR", Name = "OpenLips_OpenLowerLip_SmileFullRA" );
		CopyNode( SourceNode = "SmileFull_PlatysmusL", Name = "SmileFull_PlatysmusLA" );
		CopyNode( SourceNode = "SmileFull_PlatysmusR", Name = "SmileFull_PlatysmusRA" );
		CopyNode( SourceNode = "Platysmus_RaiseChinL", Name = "Platysmus_RaiseChinLA" );
		CopyNode( SourceNode = "Platysmus_RaiseChinR", Name = "Platysmus_RaiseChinRA" );
		CopyNode( SourceNode = "JutUpperLip_Platysmus_RaiseChinL", Name = "JutUpperLip_Platysmus_RaiseChinLA" );
		CopyNode( SourceNode = "JutUpperLip_Platysmus_RaiseChinR", Name = "JutUpperLip_Platysmus_RaiseChinRA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_PlatysmusL", Name = "OpenUpperLip_SmileFull_PlatysmusLA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_PlatysmusR", Name = "OpenUpperLip_SmileFull_PlatysmusRA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_PlatysmusL", Name = "OpenLowerLip_SmileFull_PlatysmusLA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_PlatysmusR", Name = "OpenLowerLip_SmileFull_PlatysmusRA" );
		CopyNode( SourceNode = "OpenJaw_PlatysmusL", Name = "OpenJaw_PlatysmusLA" );
		CopyNode( SourceNode = "OpenJaw_PlatysmusR", Name = "OpenJaw_PlatysmusRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_PlatysmusL", Name = "OpenJaw_OpenLowerLip_PlatysmusLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_PlatysmusR", Name = "OpenJaw_OpenLowerLip_PlatysmusRA" );
		CopyNode( SourceNode = "OpenJaw_SmileFullL", Name = "OpenJaw_SmileFullLA" );
		CopyNode( SourceNode = "OpenJaw_SmileFullR", Name = "OpenJaw_SmileFullRA" );
		CopyNode( SourceNode = "OpenJaw_Platysmus_SmileFullL", Name = "OpenJaw_Platysmus_SmileFullLA" );
		CopyNode( SourceNode = "OpenJaw_Platysmus_SmileFullR", Name = "OpenJaw_Platysmus_SmileFullRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_SmileFullL", Name = "OpenJaw_OpenLowerLip_SmileFullLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_SmileFullR", Name = "OpenJaw_OpenLowerLip_SmileFullRA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_SmileFullL", Name = "OpenJaw_OpenUpperLip_SmileFullLA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_SmileFullR", Name = "OpenJaw_OpenUpperLip_SmileFullRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_SmileFullL", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_SmileFullLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_SmileFullR", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_SmileFullRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_SmileFull_PlatysmusL", Name = "OpenJaw_OpenLowerLip_SmileFull_PlatysmusLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_SmileFull_PlatysmusR", Name = "OpenJaw_OpenLowerLip_SmileFull_PlatysmusRA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_PlatysmusL", Name = "OpenJaw_OpenUpperLip_PlatysmusLA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_PlatysmusR", Name = "OpenJaw_OpenUpperLip_PlatysmusRA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_PlatysmusL", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_PlatysmusLA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_PlatysmusR", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_PlatysmusRA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_SmileFull_PlatysmusL", Name = "OpenJaw_OpenUpperLip_SmileFull_PlatysmusLA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_SmileFull_PlatysmusR", Name = "OpenJaw_OpenUpperLip_SmileFull_PlatysmusRA" );
		CopyNode( SourceNode = "SlideJawL", Name = "SlideJawLA" );
		CopyNode( SourceNode = "SlideJawR", Name = "SlideJawRA" );
		CopyNode( SourceNode = "CheekV_PuckerLipUp_RaiseChinL", Name = "CheekV_PuckerLipUp_RaiseChinLA" );
		CopyNode( SourceNode = "CheekV_PuckerLipUp_RaiseChinR", Name = "CheekV_PuckerLipUp_RaiseChinRA" );
		CopyNode( SourceNode = "CompressLips_JutUpperLip_RaiseChinL", Name = "CompressLips_JutUpperLip_RaiseChinLA" );
		CopyNode( SourceNode = "CompressLips_JutUpperLip_RaiseChinR", Name = "CompressLips_JutUpperLip_RaiseChinRA" );
		CopyNode( SourceNode = "TongueBack", Name = "TongueBackA" );
		CopyNode( SourceNode = "TongueCurlDown", Name = "TongueCurlDownA" );
		CopyNode( SourceNode = "TongueCurlUp", Name = "TongueCurlUpA" );
		CopyNode( SourceNode = "TongueFunnel", Name = "TongueFunnelA" );
		CopyNode( SourceNode = "TongueLeft", Name = "TongueLeftA" );
		CopyNode( SourceNode = "TongueNarrow", Name = "TongueNarrowA" );
		CopyNode( SourceNode = "TongueOut", Name = "TongueOutA" );
		CopyNode( SourceNode = "TongueRight", Name = "TongueRightA" );
		CopyNode( SourceNode = "TongueV", Name = "TongueVA" );
		CopyNode( SourceNode = "TongueWide", Name = "TongueWideA" );
		CopyNode( SourceNode = "ZipLip00L", Name = "ZipLip00LA" );
		CopyNode( SourceNode = "ZipLip00R", Name = "ZipLip00RA" );
		CopyNode( SourceNode = "ZipLip25L", Name = "ZipLip25LA" );
		CopyNode( SourceNode = "ZipLip25R", Name = "ZipLip25RA" );
		CopyNode( SourceNode = "ZipLip50L", Name = "ZipLip50LA" );
		CopyNode( SourceNode = "ZipLip50R", Name = "ZipLip50RA" );
		CopyNode( SourceNode = "ZipLip75L", Name = "ZipLip75LA" );
		CopyNode( SourceNode = "ZipLip75R", Name = "ZipLip75RA" );
		CopyNode( SourceNode = "ZipLip100L", Name = "ZipLip100LA" );
		CopyNode( SourceNode = "ZipLip100R", Name = "ZipLip100RA" );
		CopyNode( SourceNode = "OpenLips_ZipLip00L", Name = "OpenLips_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLips_ZipLip00R", Name = "OpenLips_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLips_ZipLip100L", Name = "OpenLips_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLips_ZipLip100R", Name = "OpenLips_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLips_ZipLip75L", Name = "OpenLips_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLips_ZipLip75R", Name = "OpenLips_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLips_ZipLip50L", Name = "OpenLips_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLips_ZipLip50R", Name = "OpenLips_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLips_ZipLip25L", Name = "OpenLips_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLips_ZipLip25R", Name = "OpenLips_ZipLip25RA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip00L", Name = "OpenUpperLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip00R", Name = "OpenUpperLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip100L", Name = "OpenUpperLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip100R", Name = "OpenUpperLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip75L", Name = "OpenUpperLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip75R", Name = "OpenUpperLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip50L", Name = "OpenUpperLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip50R", Name = "OpenUpperLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip25L", Name = "OpenUpperLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenUpperLip_ZipLip25R", Name = "OpenUpperLip_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip00L", Name = "OpenLowerLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip00R", Name = "OpenLowerLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip100L", Name = "OpenLowerLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip100R", Name = "OpenLowerLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip75L", Name = "OpenLowerLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip75R", Name = "OpenLowerLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip50L", Name = "OpenLowerLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip50R", Name = "OpenLowerLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip25L", Name = "OpenLowerLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLowerLip_ZipLip25R", Name = "OpenLowerLip_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip00L", Name = "OpenLowerLip_OpenUpperLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip00R", Name = "OpenLowerLip_OpenUpperLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip100L", Name = "OpenLowerLip_OpenUpperLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip100R", Name = "OpenLowerLip_OpenUpperLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip75L", Name = "OpenLowerLip_OpenUpperLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip75R", Name = "OpenLowerLip_OpenUpperLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip50L", Name = "OpenLowerLip_OpenUpperLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip50R", Name = "OpenLowerLip_OpenUpperLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip25L", Name = "OpenLowerLip_OpenUpperLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_ZipLip25R", Name = "OpenLowerLip_OpenUpperLip_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip00L", Name = "OpenLips_OpenLowerLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip00R", Name = "OpenLips_OpenLowerLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip100L", Name = "OpenLips_OpenLowerLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip100R", Name = "OpenLips_OpenLowerLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip75L", Name = "OpenLips_OpenLowerLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip75R", Name = "OpenLips_OpenLowerLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip50L", Name = "OpenLips_OpenLowerLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip50R", Name = "OpenLips_OpenLowerLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip25L", Name = "OpenLips_OpenLowerLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_ZipLip25R", Name = "OpenLips_OpenLowerLip_ZipLip25RA" );
		CopyNode( SourceNode = "SneerNose_ZipLip00L", Name = "SneerNose_ZipLip00LA" );
		CopyNode( SourceNode = "SneerNose_ZipLip00R", Name = "SneerNose_ZipLip00RA" );
		CopyNode( SourceNode = "SneerNose_ZipLip100L", Name = "SneerNose_ZipLip100LA" );
		CopyNode( SourceNode = "SneerNose_ZipLip100R", Name = "SneerNose_ZipLip100RA" );
		CopyNode( SourceNode = "SneerNose_ZipLip75L", Name = "SneerNose_ZipLip75LA" );
		CopyNode( SourceNode = "SneerNose_ZipLip75R", Name = "SneerNose_ZipLip75RA" );
		CopyNode( SourceNode = "SneerNose_ZipLip50L", Name = "SneerNose_ZipLip50LA" );
		CopyNode( SourceNode = "SneerNose_ZipLip50R", Name = "SneerNose_ZipLip50RA" );
		CopyNode( SourceNode = "SneerNose_ZipLip25L", Name = "SneerNose_ZipLip25LA" );
		CopyNode( SourceNode = "SneerNose_ZipLip25R", Name = "SneerNose_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip00L", Name = "OpenLips_OpenUpperLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip00R", Name = "OpenLips_OpenUpperLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip100L", Name = "OpenLips_OpenUpperLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip100R", Name = "OpenLips_OpenUpperLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip75L", Name = "OpenLips_OpenUpperLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip75R", Name = "OpenLips_OpenUpperLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip50L", Name = "OpenLips_OpenUpperLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip50R", Name = "OpenLips_OpenUpperLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip25L", Name = "OpenLips_OpenUpperLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_ZipLip25R", Name = "OpenLips_OpenUpperLip_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip00L", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip00R", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip100L", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip100R", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip75L", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip75R", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip50L", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip50R", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip25L", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip25R", Name = "OpenLowerLip_OpenUpperLip_SmileFull_ZipLip25RA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip00L", Name = "OpenUpperLip_SmileFull_ZipLip00LA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip00R", Name = "OpenUpperLip_SmileFull_ZipLip00RA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip100L", Name = "OpenUpperLip_SmileFull_ZipLip100LA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip100R", Name = "OpenUpperLip_SmileFull_ZipLip100RA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip75L", Name = "OpenUpperLip_SmileFull_ZipLip75LA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip75R", Name = "OpenUpperLip_SmileFull_ZipLip75RA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip50L", Name = "OpenUpperLip_SmileFull_ZipLip50LA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip50R", Name = "OpenUpperLip_SmileFull_ZipLip50RA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip25L", Name = "OpenUpperLip_SmileFull_ZipLip25LA" );
		CopyNode( SourceNode = "OpenUpperLip_SmileFull_ZipLip25R", Name = "OpenUpperLip_SmileFull_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip00L", Name = "OpenLowerLip_SmileFull_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip00R", Name = "OpenLowerLip_SmileFull_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip100L", Name = "OpenLowerLip_SmileFull_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip100R", Name = "OpenLowerLip_SmileFull_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip75L", Name = "OpenLowerLip_SmileFull_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip75R", Name = "OpenLowerLip_SmileFull_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip50L", Name = "OpenLowerLip_SmileFull_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip50R", Name = "OpenLowerLip_SmileFull_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip25L", Name = "OpenLowerLip_SmileFull_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLowerLip_SmileFull_ZipLip25R", Name = "OpenLowerLip_SmileFull_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip00L", Name = "OpenLips_SmileFull_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip00R", Name = "OpenLips_SmileFull_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip100L", Name = "OpenLips_SmileFull_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip100R", Name = "OpenLips_SmileFull_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip75L", Name = "OpenLips_SmileFull_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip75R", Name = "OpenLips_SmileFull_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip50L", Name = "OpenLips_SmileFull_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip50R", Name = "OpenLips_SmileFull_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip25L", Name = "OpenLips_SmileFull_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLips_SmileFull_ZipLip25R", Name = "OpenLips_SmileFull_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip00L", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip00R", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip100L", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip100R", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip75L", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip75R", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip50L", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip50R", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip25L", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLips_OpenLowerLip_SmileFull_ZipLip25R", Name = "OpenLips_OpenLowerLip_SmileFull_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip00L", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip00R", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip100L", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip100R", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip75L", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip75R", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip50L", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip50R", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip25L", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLips_OpenUpperLip_SmileFull_ZipLip25R", Name = "OpenLips_OpenUpperLip_SmileFull_ZipLip25RA" );
		CopyNode( SourceNode = "SmileFull_ZipLip00L", Name = "SmileFull_ZipLip00LA" );
		CopyNode( SourceNode = "SmileFull_ZipLip00R", Name = "SmileFull_ZipLip00RA" );
		CopyNode( SourceNode = "SmileFull_ZipLip100L", Name = "SmileFull_ZipLip100LA" );
		CopyNode( SourceNode = "SmileFull_ZipLip100R", Name = "SmileFull_ZipLip100RA" );
		CopyNode( SourceNode = "SmileFull_ZipLip75L", Name = "SmileFull_ZipLip75LA" );
		CopyNode( SourceNode = "SmileFull_ZipLip75R", Name = "SmileFull_ZipLip75RA" );
		CopyNode( SourceNode = "SmileFull_ZipLip50L", Name = "SmileFull_ZipLip50LA" );
		CopyNode( SourceNode = "SmileFull_ZipLip50R", Name = "SmileFull_ZipLip50RA" );
		CopyNode( SourceNode = "SmileFull_ZipLip25L", Name = "SmileFull_ZipLip25LA" );
		CopyNode( SourceNode = "SmileFull_ZipLip25R", Name = "SmileFull_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip00L", Name = "OpenJaw_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip00R", Name = "OpenJaw_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip100L", Name = "OpenJaw_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip100R", Name = "OpenJaw_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip75L", Name = "OpenJaw_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip75R", Name = "OpenJaw_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip50L", Name = "OpenJaw_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip50R", Name = "OpenJaw_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip25L", Name = "OpenJaw_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_ZipLip25R", Name = "OpenJaw_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip00L", Name = "OpenJaw_OpenLips_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip00R", Name = "OpenJaw_OpenLips_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip100L", Name = "OpenJaw_OpenLips_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip100R", Name = "OpenJaw_OpenLips_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip75L", Name = "OpenJaw_OpenLips_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip75R", Name = "OpenJaw_OpenLips_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip50L", Name = "OpenJaw_OpenLips_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip50R", Name = "OpenJaw_OpenLips_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip25L", Name = "OpenJaw_OpenLips_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_ZipLip25R", Name = "OpenJaw_OpenLips_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip00L", Name = "OpenJaw_OpenLowerLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip00R", Name = "OpenJaw_OpenLowerLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip100L", Name = "OpenJaw_OpenLowerLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip100R", Name = "OpenJaw_OpenLowerLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip75L", Name = "OpenJaw_OpenLowerLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip75R", Name = "OpenJaw_OpenLowerLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip50L", Name = "OpenJaw_OpenLowerLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip50R", Name = "OpenJaw_OpenLowerLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip25L", Name = "OpenJaw_OpenLowerLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_ZipLip25R", Name = "OpenJaw_OpenLowerLip_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip00L", Name = "OpenJaw_OpenUpperLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip00R", Name = "OpenJaw_OpenUpperLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip100L", Name = "OpenJaw_OpenUpperLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip100R", Name = "OpenJaw_OpenUpperLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip75L", Name = "OpenJaw_OpenUpperLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip75R", Name = "OpenJaw_OpenUpperLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip50L", Name = "OpenJaw_OpenUpperLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip50R", Name = "OpenJaw_OpenUpperLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip25L", Name = "OpenJaw_OpenUpperLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_OpenUpperLip_ZipLip25R", Name = "OpenJaw_OpenUpperLip_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip00L", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip00R", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip100L", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip100R", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip75L", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip75R", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip50L", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip50R", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip25L", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenLowerLip_ZipLip25R", Name = "OpenJaw_OpenLips_OpenLowerLip_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip00L", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip00R", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip100L", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip100R", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip75L", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip75R", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip50L", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip50R", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip25L", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_OpenUpperLip_ZipLip25R", Name = "OpenJaw_OpenLips_OpenUpperLip_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip00L", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip00R", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip100L", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip100R", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip75L", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip75R", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip50L", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip50R", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip25L", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip25R", Name = "OpenJaw_OpenLowerLip_OpenUpperLip_ZipLip25RA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip00L", Name = "PuckerLipLo_PuckerLipUp_ZipLip00LA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip00R", Name = "PuckerLipLo_PuckerLipUp_ZipLip00RA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip100L", Name = "PuckerLipLo_PuckerLipUp_ZipLip100LA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip100R", Name = "PuckerLipLo_PuckerLipUp_ZipLip100RA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip75L", Name = "PuckerLipLo_PuckerLipUp_ZipLip75LA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip75R", Name = "PuckerLipLo_PuckerLipUp_ZipLip75RA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip50L", Name = "PuckerLipLo_PuckerLipUp_ZipLip50LA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip50R", Name = "PuckerLipLo_PuckerLipUp_ZipLip50RA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip25L", Name = "PuckerLipLo_PuckerLipUp_ZipLip25LA" );
		CopyNode( SourceNode = "PuckerLipLo_PuckerLipUp_ZipLip25R", Name = "PuckerLipLo_PuckerLipUp_ZipLip25RA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00L", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00LA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00R", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00RA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100L", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100LA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100R", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100RA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75L", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75LA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75R", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75RA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50L", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50LA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50R", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50RA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25L", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25LA" );
		CopyNode( SourceNode = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25R", Name = "OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip00L", Name = "OpenJaw_PuckerLipUp_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip00R", Name = "OpenJaw_PuckerLipUp_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip100L", Name = "OpenJaw_PuckerLipUp_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip100R", Name = "OpenJaw_PuckerLipUp_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip75L", Name = "OpenJaw_PuckerLipUp_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip75R", Name = "OpenJaw_PuckerLipUp_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip50L", Name = "OpenJaw_PuckerLipUp_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip50R", Name = "OpenJaw_PuckerLipUp_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip25L", Name = "OpenJaw_PuckerLipUp_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipUp_ZipLip25R", Name = "OpenJaw_PuckerLipUp_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip00L", Name = "OpenJaw_PuckerLipLo_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip00R", Name = "OpenJaw_PuckerLipLo_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip100L", Name = "OpenJaw_PuckerLipLo_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip100R", Name = "OpenJaw_PuckerLipLo_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip75L", Name = "OpenJaw_PuckerLipLo_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip75R", Name = "OpenJaw_PuckerLipLo_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip50L", Name = "OpenJaw_PuckerLipLo_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip50R", Name = "OpenJaw_PuckerLipLo_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip25L", Name = "OpenJaw_PuckerLipLo_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_ZipLip25R", Name = "OpenJaw_PuckerLipLo_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip00L", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip00R", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip100L", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip100R", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip75L", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip75R", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip50L", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip50R", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip25L", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip25R", Name = "OpenJaw_PuckerLipLo_PuckerLipUp_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00L", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00R", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100L", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100R", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75L", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75R", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50L", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50R", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25L", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25R", Name = "OpenJaw_OpenLips_PuckerLipLo_PuckerLipUp_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip00L", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip00R", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip100L", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip100R", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip75L", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip75R", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip50L", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip50R", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip25L", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipLo_ZipLip25R", Name = "OpenJaw_OpenLips_PuckerLipLo_ZipLip25RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip00L", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip00LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip00R", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip00RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip100L", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip100LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip100R", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip100RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip75L", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip75LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip75R", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip75RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip50L", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip50LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip50R", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip50RA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip25L", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip25LA" );
		CopyNode( SourceNode = "OpenJaw_OpenLips_PuckerLipUp_ZipLip25R", Name = "OpenJaw_OpenLips_PuckerLipUp_ZipLip25RA" );
		CopyNode( SourceNode = "TongueBack_TongueCurlDown", Name = "TongueBack_TongueCurlDownA" );
		CopyNode( SourceNode = "OpenJaw_TongueOut", Name = "OpenJaw_TongueOutA" );
		CopyNode( SourceNode = "TongueCurlDown_TongueOut", Name = "TongueCurlDown_TongueOutA" );
		CopyNode( SourceNode = "TongueCurlUp_TongueOut", Name = "TongueCurlUp_TongueOutA" );
		CopyNode( SourceNode = "TongueBack_TongueV", Name = "TongueBack_TongueVA" );
		CopyNode( SourceNode = "TongueBack_TongueCurlDown_TongueV", Name = "TongueBack_TongueCurlDown_TongueVA" );
		CopyNode( SourceNode = "TongueCurlDown_TongueV", Name = "TongueCurlDown_TongueVA" );
		CopyNode( SourceNode = "TongueCurlUp_TongueV", Name = "TongueCurlUp_TongueVA" );
		CopyNode( SourceNode = "TongueCurlDown_TongueOut_TongueV", Name = "TongueCurlDown_TongueOut_TongueVA" );
		CopyNode( SourceNode = "TongueCurlUp_TongueOut_TongueV", Name = "TongueCurlUp_TongueOut_TongueVA" );
		CopyNode( SourceNode = "TongueOut_TongueV", Name = "TongueOut_TongueVA" );
		CopyNode( SourceNode = "eyes_right", Name = "eyes_rightA" );
		CopyNode( SourceNode = "eyes_left", Name = "eyes_leftA" );
		CopyNode( SourceNode = "eyes_up", Name = "eyes_upA" );
		CopyNode( SourceNode = "eyes_down", Name = "eyes_downA" );

"""
			},
			{
				_class = "AnimationList"
				children = 
				[
					{
						_class = "EmptyAnim"
						name = "Empty"
						activity_name = ""
						activity_weight = 1
						weight_list_name = ""
						fade_in_time = 0.2
						fade_out_time = 0.2
						looping = false
						delta = false
						worldSpace = false
						hidden = false
						anim_markup_ordered = false
						disable_compression = false
						frame_count = 1
						frame_rate = 30
					},
				]
				default_root_bone_name = ""
			},
		]
		model_archetype = ""
		primary_associated_entity = ""
		anim_graph_name = ""
	}
}